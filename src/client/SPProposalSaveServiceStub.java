
/**
 * SPProposalSaveServiceStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.0  Built on : May 17, 2011 (04:19:43 IST)
 */
        package client;

        

        /*
        *  SPProposalSaveServiceStub java implementation
        */

        
        public class SPProposalSaveServiceStub extends org.apache.axis2.client.Stub
        {
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();

        private static int counter = 0;

        private static synchronized String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1;
            return Long.toString(System.currentTimeMillis()) + "_" + counter;
        }


    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("SPProposalSaveService" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[1];

                   __operation = new org.apache.axis2.description.OutInAxisOperation();


            __operation.setName(new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com", "service"));
	    _service.addOperation(__operation);




            _operations[0]=__operation;


        }

    //populates the faults
    private void populateFaults(){



    }

    /**
      *Constructor that takes in a configContext
      */

    public SPProposalSaveServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public SPProposalSaveServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);


        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);

            //Set the soap version
            _serviceClient.getOptions().setSoapVersionURI(org.apache.axiom.soap.SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);


    }

    /**
     * Default Constructor
     */
    public SPProposalSaveServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {

                    this(configurationContext,"http://172.2.0.39:7001//webServiceCenter/services/SPProposalSaveService.SPProposalSaveServiceHttpSoap12Endpoint/" );

    }

    /**
     * Default Constructor
     */
    public SPProposalSaveServiceStub() throws org.apache.axis2.AxisFault {

                    this("http://172.2.0.39:7001//webServiceCenter/services/SPProposalSaveService.SPProposalSaveServiceHttpSoap12Endpoint/" );

    }

    /**
     * Constructor taking the target endpoint
     */
    public SPProposalSaveServiceStub(String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }




                    /**
                     * Auto generated method signature
                     *
                     * @see client.SPProposalSaveService#service
                     * @param service0

                     */



                            public  client.SPProposalSaveServiceStub.ServiceResponse service(

                            client.SPProposalSaveServiceStub.Service service0)


                    throws java.rmi.RemoteException

                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("urn:service");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);



                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");


              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();



              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;


                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    service0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com",
                                                    "service")), new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com",
                                                    "service"));

        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);
                  // «Î«Ûœ˚œ¢
                  System.out.println(_messageContext.getEnvelope());

               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();


                                Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             client.SPProposalSaveServiceStub.ServiceResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));


                                        return (client.SPProposalSaveServiceStub.ServiceResponse)object;

         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"service"))){
                    //make the fault by reflection
                    try{
                        String exceptionClassName = (String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"service"));
                        Class exceptionClass = Class.forName(exceptionClassName);
                        Exception ex = (Exception) exceptionClass.newInstance();
                        //message class
                        String messageClassName = (String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"service"));
                        Class messageClass = Class.forName(messageClassName);
                        Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new Class[]{messageClass});
                        m.invoke(ex,new Object[]{messageObject});


                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }

                /**
                * Auto generated method signature for Asynchronous Invocations
                *
                * @see client.SPProposalSaveService#startservice
                    * @param service0

                */
                public  void startservice(

                 client.SPProposalSaveServiceStub.Service service0,

                  final client.SPProposalSaveServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("urn:service");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);



                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");



              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();


                                    //Style is Doc.


                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    service0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com",
                                                    "service")), new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com",
                                                    "service"));

        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);



                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();

                                        Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         client.SPProposalSaveServiceStub.ServiceResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultservice(
                                        (client.SPProposalSaveServiceStub.ServiceResponse)object);

                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorservice(e);
                            }
                            }

                            public void onError(Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"service"))){
											//make the fault by reflection
											try{
													String exceptionClassName = (String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"service"));
													Class exceptionClass = Class.forName(exceptionClassName);
													Exception ex = (Exception) exceptionClass.newInstance();
													//message class
													String messageClassName = (String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"service"));
														Class messageClass = Class.forName(messageClassName);
													Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new Class[]{messageClass});
													m.invoke(ex,new Object[]{messageObject});


										            callback.receiveErrorservice(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorservice(f);
                                            } catch (ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorservice(f);
                                            } catch (NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorservice(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorservice(f);
                                            } catch (IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorservice(f);
                                            } catch (InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorservice(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorservice(f);
                                            }
									    } else {
										    callback.receiveErrorservice(f);
									    }
									} else {
									    callback.receiveErrorservice(f);
									}
								} else {
								    callback.receiveErrorservice(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorservice(axisFault);
                                }
                            }
                });


          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }



       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }



    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {


        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;
            }
        }
        return false;
    }
     //http://172.2.0.39:7001//webServiceCenter/services/SPProposalSaveService.SPProposalSaveServiceHttpSoap12Endpoint/
        public static class FlightEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FlightEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for FlightDate
                        */


                                    protected String localFlightDate ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlightDateTracker = false ;

                           public boolean isFlightDateSpecified(){
                               return localFlightDateTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getFlightDate(){
                               return localFlightDate;
                           }



                            /**
                               * Auto generated setter method
                               * @param param FlightDate
                               */
                               public void setFlightDate(String param){
                            localFlightDateTracker = true;

                                            this.localFlightDate=param;


                               }


                        /**
                        * field for FlightNo
                        */


                                    protected String localFlightNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlightNoTracker = false ;

                           public boolean isFlightNoSpecified(){
                               return localFlightNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getFlightNo(){
                               return localFlightNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param FlightNo
                               */
                               public void setFlightNo(String param){
                            localFlightNoTracker = true;

                                            this.localFlightNo=param;


                               }


                        /**
                        * field for FlightTer
                        */


                                    protected String localFlightTer ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlightTerTracker = false ;

                           public boolean isFlightTerSpecified(){
                               return localFlightTerTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getFlightTer(){
                               return localFlightTer;
                           }



                            /**
                               * Auto generated setter method
                               * @param param FlightTer
                               */
                               public void setFlightTer(String param){
                            localFlightTerTracker = true;

                                            this.localFlightTer=param;


                               }


                        /**
                        * field for RFlightDate
                        */


                                    protected String localRFlightDate ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRFlightDateTracker = false ;

                           public boolean isRFlightDateSpecified(){
                               return localRFlightDateTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRFlightDate(){
                               return localRFlightDate;
                           }



                            /**
                               * Auto generated setter method
                               * @param param RFlightDate
                               */
                               public void setRFlightDate(String param){
                            localRFlightDateTracker = true;

                                            this.localRFlightDate=param;


                               }


                        /**
                        * field for RFlightNo
                        */


                                    protected String localRFlightNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRFlightNoTracker = false ;

                           public boolean isRFlightNoSpecified(){
                               return localRFlightNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRFlightNo(){
                               return localRFlightNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param RFlightNo
                               */
                               public void setRFlightNo(String param){
                            localRFlightNoTracker = true;

                                            this.localRFlightNo=param;


                               }


                        /**
                        * field for RFlightTer
                        */


                                    protected String localRFlightTer ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRFlightTerTracker = false ;

                           public boolean isRFlightTerSpecified(){
                               return localRFlightTerTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRFlightTer(){
                               return localRFlightTer;
                           }



                            /**
                               * Auto generated setter method
                               * @param param RFlightTer
                               */
                               public void setRFlightTer(String param){
                            localRFlightTerTracker = true;

                                            this.localRFlightTer=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":FlightEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "FlightEhm",
                           xmlWriter);
                   }


                   }
                if (localFlightDateTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "flightDate", xmlWriter);


                                          if (localFlightDate==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localFlightDate);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localFlightNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "flightNo", xmlWriter);


                                          if (localFlightNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localFlightNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localFlightTerTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "flightTer", xmlWriter);


                                          if (localFlightTer==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localFlightTer);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localRFlightDateTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "rFlightDate", xmlWriter);


                                          if (localRFlightDate==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRFlightDate);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localRFlightNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "rFlightNo", xmlWriter);


                                          if (localRFlightNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRFlightNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localRFlightTerTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "rFlightTer", xmlWriter);


                                          if (localRFlightTer==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRFlightTer);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localFlightDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "flightDate"));

                                         elementList.add(localFlightDate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlightDate));
                                    } if (localFlightNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "flightNo"));

                                         elementList.add(localFlightNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlightNo));
                                    } if (localFlightTerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "flightTer"));

                                         elementList.add(localFlightTer==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlightTer));
                                    } if (localRFlightDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "rFlightDate"));

                                         elementList.add(localRFlightDate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRFlightDate));
                                    } if (localRFlightNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "rFlightNo"));

                                         elementList.add(localRFlightNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRFlightNo));
                                    } if (localRFlightTerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "rFlightTer"));

                                         elementList.add(localRFlightTer==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRFlightTer));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static FlightEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            FlightEhm object =
                new FlightEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"FlightEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FlightEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","flightDate").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setFlightDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","flightNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setFlightNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","flightTer").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setFlightTer(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","rFlightDate").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRFlightDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","rFlightNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRFlightNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","rFlightTer").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRFlightTer(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class Service
        implements org.apache.axis2.databinding.ADBBean{

                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com",
                "service",
                "ns3");



                        /**
                        * field for Request
                        */


                                    protected ProposalSaveRequest localRequest ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRequestTracker = false ;

                           public boolean isRequestSpecified(){
                               return localRequestTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return ProposalSaveRequest
                           */
                           public  ProposalSaveRequest getRequest(){
                               return localRequest;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Request
                               */
                               public void setRequest(ProposalSaveRequest param){
                            localRequestTracker = true;

                                            this.localRequest=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":service",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "service",
                           xmlWriter);
                   }


                   }
                if (localRequestTracker){
                                    if (localRequest==null){

                                        writeStartElement(null, "http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com", "request", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localRequest.serialize(new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com","request"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localRequestTracker){
                            elementList.add(new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com",
                                                                      "request"));


                                    elementList.add(localRequest==null?null:
                                    localRequest);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Service parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            Service object =
                new Service();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"service".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Service) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com","request").equals(reader.getName())){

                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setRequest(null);
                                          reader.next();

                                            reader.next();

                                      }else{

                                                object.setRequest(ProposalSaveRequest.Factory.parse(reader));

                                        reader.next();
                                    }
                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class NameEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = NameEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for Age
                        */


                                    protected String localAge ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAgeTracker = false ;

                           public boolean isAgeSpecified(){
                               return localAgeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAge(){
                               return localAge;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Age
                               */
                               public void setAge(String param){
                            localAgeTracker = true;

                                            this.localAge=param;


                               }


                        /**
                        * field for Currency
                        */


                                    protected String localCurrency ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCurrencyTracker = false ;

                           public boolean isCurrencySpecified(){
                               return localCurrencyTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getCurrency(){
                               return localCurrency;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Currency
                               */
                               public void setCurrency(String param){
                            localCurrencyTracker = true;

                                            this.localCurrency=param;


                               }


                        /**
                        * field for Currency1
                        */


                                    protected String localCurrency1 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCurrency1Tracker = false ;

                           public boolean isCurrency1Specified(){
                               return localCurrency1Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getCurrency1(){
                               return localCurrency1;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Currency1
                               */
                               public void setCurrency1(String param){
                            localCurrency1Tracker = true;

                                            this.localCurrency1=param;


                               }


                        /**
                        * field for EmployeeCode
                        */


                                    protected String localEmployeeCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmployeeCodeTracker = false ;

                           public boolean isEmployeeCodeSpecified(){
                               return localEmployeeCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getEmployeeCode(){
                               return localEmployeeCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param EmployeeCode
                               */
                               public void setEmployeeCode(String param){
                            localEmployeeCodeTracker = true;

                                            this.localEmployeeCode=param;


                               }


                        /**
                        * field for EmployeeName
                        */


                                    protected String localEmployeeName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmployeeNameTracker = false ;

                           public boolean isEmployeeNameSpecified(){
                               return localEmployeeNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getEmployeeName(){
                               return localEmployeeName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param EmployeeName
                               */
                               public void setEmployeeName(String param){
                            localEmployeeNameTracker = true;

                                            this.localEmployeeName=param;


                               }


                        /**
                        * field for EndDate
                        */


                                    protected String localEndDate ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEndDateTracker = false ;

                           public boolean isEndDateSpecified(){
                               return localEndDateTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getEndDate(){
                               return localEndDate;
                           }



                            /**
                               * Auto generated setter method
                               * @param param EndDate
                               */
                               public void setEndDate(String param){
                            localEndDateTracker = true;

                                            this.localEndDate=param;


                               }


                        /**
                        * field for EndHour
                        */


                                    protected String localEndHour ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEndHourTracker = false ;

                           public boolean isEndHourSpecified(){
                               return localEndHourTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getEndHour(){
                               return localEndHour;
                           }



                            /**
                               * Auto generated setter method
                               * @param param EndHour
                               */
                               public void setEndHour(String param){
                            localEndHourTracker = true;

                                            this.localEndHour=param;


                               }


                        /**
                        * field for Flag
                        */


                                    protected String localFlag ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlagTracker = false ;

                           public boolean isFlagSpecified(){
                               return localFlagTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getFlag(){
                               return localFlag;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Flag
                               */
                               public void setFlag(String param){
                            localFlagTracker = true;

                                            this.localFlag=param;


                               }


                        /**
                        * field for Health
                        */


                                    protected String localHealth ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHealthTracker = false ;

                           public boolean isHealthSpecified(){
                               return localHealthTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getHealth(){
                               return localHealth;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Health
                               */
                               public void setHealth(String param){
                            localHealthTracker = true;

                                            this.localHealth=param;


                               }


                        /**
                        * field for IdentifyNumber
                        */


                                    protected String localIdentifyNumber ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyNumberTracker = false ;

                           public boolean isIdentifyNumberSpecified(){
                               return localIdentifyNumberTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyNumber(){
                               return localIdentifyNumber;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyNumber
                               */
                               public void setIdentifyNumber(String param){
                            localIdentifyNumberTracker = true;

                                            this.localIdentifyNumber=param;


                               }


                        /**
                        * field for IdentifyType
                        */


                                    protected String localIdentifyType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyTypeTracker = false ;

                           public boolean isIdentifyTypeSpecified(){
                               return localIdentifyTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyType(){
                               return localIdentifyType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyType
                               */
                               public void setIdentifyType(String param){
                            localIdentifyTypeTracker = true;

                                            this.localIdentifyType=param;


                               }


                        /**
                        * field for ItemCode
                        */


                                    protected String localItemCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localItemCodeTracker = false ;

                           public boolean isItemCodeSpecified(){
                               return localItemCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getItemCode(){
                               return localItemCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ItemCode
                               */
                               public void setItemCode(String param){
                            localItemCodeTracker = true;

                                            this.localItemCode=param;


                               }


                        /**
                        * field for ItemDetailName
                        */


                                    protected String localItemDetailName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localItemDetailNameTracker = false ;

                           public boolean isItemDetailNameSpecified(){
                               return localItemDetailNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getItemDetailName(){
                               return localItemDetailName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ItemDetailName
                               */
                               public void setItemDetailName(String param){
                            localItemDetailNameTracker = true;

                                            this.localItemDetailName=param;


                               }


                        /**
                        * field for JobCode
                        */


                                    protected String localJobCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localJobCodeTracker = false ;

                           public boolean isJobCodeSpecified(){
                               return localJobCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getJobCode(){
                               return localJobCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param JobCode
                               */
                               public void setJobCode(String param){
                            localJobCodeTracker = true;

                                            this.localJobCode=param;


                               }


                        /**
                        * field for JobName
                        */


                                    protected String localJobName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localJobNameTracker = false ;

                           public boolean isJobNameSpecified(){
                               return localJobNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getJobName(){
                               return localJobName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param JobName
                               */
                               public void setJobName(String param){
                            localJobNameTracker = true;

                                            this.localJobName=param;


                               }


                        /**
                        * field for JobUnit
                        */


                                    protected String localJobUnit ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localJobUnitTracker = false ;

                           public boolean isJobUnitSpecified(){
                               return localJobUnitTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getJobUnit(){
                               return localJobUnit;
                           }



                            /**
                               * Auto generated setter method
                               * @param param JobUnit
                               */
                               public void setJobUnit(String param){
                            localJobUnitTracker = true;

                                            this.localJobUnit=param;


                               }


                        /**
                        * field for KindCode
                        */


                                    protected String localKindCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKindCodeTracker = false ;

                           public boolean isKindCodeSpecified(){
                               return localKindCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getKindCode(){
                               return localKindCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param KindCode
                               */
                               public void setKindCode(String param){
                            localKindCodeTracker = true;

                                            this.localKindCode=param;


                               }


                        /**
                        * field for KindName
                        */


                                    protected String localKindName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKindNameTracker = false ;

                           public boolean isKindNameSpecified(){
                               return localKindNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getKindName(){
                               return localKindName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param KindName
                               */
                               public void setKindName(String param){
                            localKindNameTracker = true;

                                            this.localKindName=param;


                               }


                        /**
                        * field for MonthWage
                        */


                                    protected String localMonthWage ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMonthWageTracker = false ;

                           public boolean isMonthWageSpecified(){
                               return localMonthWageTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getMonthWage(){
                               return localMonthWage;
                           }



                            /**
                               * Auto generated setter method
                               * @param param MonthWage
                               */
                               public void setMonthWage(String param){
                            localMonthWageTracker = true;

                                            this.localMonthWage=param;


                               }


                        /**
                        * field for ProvisonalNo
                        */


                                    protected String localProvisonalNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProvisonalNoTracker = false ;

                           public boolean isProvisonalNoSpecified(){
                               return localProvisonalNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getProvisonalNo(){
                               return localProvisonalNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ProvisonalNo
                               */
                               public void setProvisonalNo(String param){
                            localProvisonalNoTracker = true;

                                            this.localProvisonalNo=param;


                               }


                        /**
                        * field for RiskCode
                        */


                                    protected String localRiskCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRiskCodeTracker = false ;

                           public boolean isRiskCodeSpecified(){
                               return localRiskCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRiskCode(){
                               return localRiskCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param RiskCode
                               */
                               public void setRiskCode(String param){
                            localRiskCodeTracker = true;

                                            this.localRiskCode=param;


                               }


                        /**
                        * field for SerialNo
                        */


                                    protected String localSerialNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSerialNoTracker = false ;

                           public boolean isSerialNoSpecified(){
                               return localSerialNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSerialNo(){
                               return localSerialNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SerialNo
                               */
                               public void setSerialNo(String param){
                            localSerialNoTracker = true;

                                            this.localSerialNo=param;


                               }


                        /**
                        * field for Sex
                        */


                                    protected String localSex ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSexTracker = false ;

                           public boolean isSexSpecified(){
                               return localSexTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSex(){
                               return localSex;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Sex
                               */
                               public void setSex(String param){
                            localSexTracker = true;

                                            this.localSex=param;


                               }


                        /**
                        * field for StartDate
                        */


                                    protected String localStartDate ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStartDateTracker = false ;

                           public boolean isStartDateSpecified(){
                               return localStartDateTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getStartDate(){
                               return localStartDate;
                           }



                            /**
                               * Auto generated setter method
                               * @param param StartDate
                               */
                               public void setStartDate(String param){
                            localStartDateTracker = true;

                                            this.localStartDate=param;


                               }


                        /**
                        * field for StartHour
                        */


                                    protected String localStartHour ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStartHourTracker = false ;

                           public boolean isStartHourSpecified(){
                               return localStartHourTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getStartHour(){
                               return localStartHour;
                           }



                            /**
                               * Auto generated setter method
                               * @param param StartHour
                               */
                               public void setStartHour(String param){
                            localStartHourTracker = true;

                                            this.localStartHour=param;


                               }


                        /**
                        * field for SumLimit
                        */


                                    protected String localSumLimit ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSumLimitTracker = false ;

                           public boolean isSumLimitSpecified(){
                               return localSumLimitTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSumLimit(){
                               return localSumLimit;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SumLimit
                               */
                               public void setSumLimit(String param){
                            localSumLimitTracker = true;

                                            this.localSumLimit=param;


                               }


                        /**
                        * field for WorkExperience
                        */


                                    protected String localWorkExperience ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWorkExperienceTracker = false ;

                           public boolean isWorkExperienceSpecified(){
                               return localWorkExperienceTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getWorkExperience(){
                               return localWorkExperience;
                           }



                            /**
                               * Auto generated setter method
                               * @param param WorkExperience
                               */
                               public void setWorkExperience(String param){
                            localWorkExperienceTracker = true;

                                            this.localWorkExperience=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":NameEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "NameEhm",
                           xmlWriter);
                   }


                   }
                if (localAgeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "age", xmlWriter);


                                          if (localAge==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAge);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localCurrencyTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "currency", xmlWriter);


                                          if (localCurrency==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localCurrency);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localCurrency1Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "currency1", xmlWriter);


                                          if (localCurrency1==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localCurrency1);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localEmployeeCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "employeeCode", xmlWriter);


                                          if (localEmployeeCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localEmployeeCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localEmployeeNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "employeeName", xmlWriter);


                                          if (localEmployeeName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localEmployeeName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localEndDateTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "endDate", xmlWriter);


                                          if (localEndDate==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localEndDate);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localEndHourTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "endHour", xmlWriter);


                                          if (localEndHour==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localEndHour);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localFlagTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "flag", xmlWriter);


                                          if (localFlag==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localFlag);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localHealthTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "health", xmlWriter);


                                          if (localHealth==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localHealth);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyNumberTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyNumber", xmlWriter);


                                          if (localIdentifyNumber==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyNumber);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyType", xmlWriter);


                                          if (localIdentifyType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localItemCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "itemCode", xmlWriter);


                                          if (localItemCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localItemCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localItemDetailNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "itemDetailName", xmlWriter);


                                          if (localItemDetailName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localItemDetailName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localJobCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "jobCode", xmlWriter);


                                          if (localJobCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localJobCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localJobNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "jobName", xmlWriter);


                                          if (localJobName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localJobName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localJobUnitTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "jobUnit", xmlWriter);


                                          if (localJobUnit==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localJobUnit);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localKindCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "kindCode", xmlWriter);


                                          if (localKindCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localKindCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localKindNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "kindName", xmlWriter);


                                          if (localKindName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localKindName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localMonthWageTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "monthWage", xmlWriter);


                                          if (localMonthWage==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localMonthWage);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localProvisonalNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "provisonalNo", xmlWriter);


                                          if (localProvisonalNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localProvisonalNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localRiskCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "riskCode", xmlWriter);


                                          if (localRiskCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRiskCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSerialNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "serialNo", xmlWriter);


                                          if (localSerialNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSerialNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSexTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "sex", xmlWriter);


                                          if (localSex==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSex);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localStartDateTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "startDate", xmlWriter);


                                          if (localStartDate==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localStartDate);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localStartHourTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "startHour", xmlWriter);


                                          if (localStartHour==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localStartHour);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSumLimitTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "sumLimit", xmlWriter);


                                          if (localSumLimit==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSumLimit);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localWorkExperienceTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "workExperience", xmlWriter);


                                          if (localWorkExperience==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localWorkExperience);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "age"));

                                         elementList.add(localAge==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAge));
                                    } if (localCurrencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "currency"));

                                         elementList.add(localCurrency==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurrency));
                                    } if (localCurrency1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "currency1"));

                                         elementList.add(localCurrency1==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurrency1));
                                    } if (localEmployeeCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "employeeCode"));

                                         elementList.add(localEmployeeCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmployeeCode));
                                    } if (localEmployeeNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "employeeName"));

                                         elementList.add(localEmployeeName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmployeeName));
                                    } if (localEndDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "endDate"));

                                         elementList.add(localEndDate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEndDate));
                                    } if (localEndHourTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "endHour"));

                                         elementList.add(localEndHour==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEndHour));
                                    } if (localFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "flag"));

                                         elementList.add(localFlag==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlag));
                                    } if (localHealthTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "health"));

                                         elementList.add(localHealth==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHealth));
                                    } if (localIdentifyNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyNumber"));

                                         elementList.add(localIdentifyNumber==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyNumber));
                                    } if (localIdentifyTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyType"));

                                         elementList.add(localIdentifyType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyType));
                                    } if (localItemCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "itemCode"));

                                         elementList.add(localItemCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemCode));
                                    } if (localItemDetailNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "itemDetailName"));

                                         elementList.add(localItemDetailName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemDetailName));
                                    } if (localJobCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "jobCode"));

                                         elementList.add(localJobCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localJobCode));
                                    } if (localJobNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "jobName"));

                                         elementList.add(localJobName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localJobName));
                                    } if (localJobUnitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "jobUnit"));

                                         elementList.add(localJobUnit==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localJobUnit));
                                    } if (localKindCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "kindCode"));

                                         elementList.add(localKindCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKindCode));
                                    } if (localKindNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "kindName"));

                                         elementList.add(localKindName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKindName));
                                    } if (localMonthWageTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "monthWage"));

                                         elementList.add(localMonthWage==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMonthWage));
                                    } if (localProvisonalNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "provisonalNo"));

                                         elementList.add(localProvisonalNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProvisonalNo));
                                    } if (localRiskCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "riskCode"));

                                         elementList.add(localRiskCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
                                    } if (localSerialNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "serialNo"));

                                         elementList.add(localSerialNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSerialNo));
                                    } if (localSexTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "sex"));

                                         elementList.add(localSex==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSex));
                                    } if (localStartDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "startDate"));

                                         elementList.add(localStartDate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStartDate));
                                    } if (localStartHourTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "startHour"));

                                         elementList.add(localStartHour==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStartHour));
                                    } if (localSumLimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "sumLimit"));

                                         elementList.add(localSumLimit==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSumLimit));
                                    } if (localWorkExperienceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "workExperience"));

                                         elementList.add(localWorkExperience==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWorkExperience));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static NameEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            NameEhm object =
                new NameEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"NameEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (NameEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","age").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","currency").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setCurrency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","currency1").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setCurrency1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","employeeCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setEmployeeCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","employeeName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setEmployeeName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","endDate").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setEndDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","endHour").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setEndHour(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","flag").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","health").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setHealth(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyNumber").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setItemCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemDetailName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setItemDetailName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","jobCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setJobCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","jobName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setJobName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","jobUnit").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setJobUnit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","kindCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setKindCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","kindName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setKindName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","monthWage").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setMonthWage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","provisonalNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setProvisonalNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRiskCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","serialNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSerialNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","sex").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSex(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","startDate").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setStartDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","startHour").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setStartHour(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","sumLimit").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSumLimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","workExperience").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setWorkExperience(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class SpecialInfoEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = SpecialInfoEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for BusinessType
                        */


                                    protected String localBusinessType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessTypeTracker = false ;

                           public boolean isBusinessTypeSpecified(){
                               return localBusinessTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBusinessType(){
                               return localBusinessType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BusinessType
                               */
                               public void setBusinessType(String param){
                            localBusinessTypeTracker = true;

                                            this.localBusinessType=param;


                               }


                        /**
                        * field for CompanyType
                        */


                                    protected String localCompanyType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyTypeTracker = false ;

                           public boolean isCompanyTypeSpecified(){
                               return localCompanyTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getCompanyType(){
                               return localCompanyType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param CompanyType
                               */
                               public void setCompanyType(String param){
                            localCompanyTypeTracker = true;

                                            this.localCompanyType=param;


                               }


                        /**
                        * field for DogImmuneNo
                        */


                                    protected String localDogImmuneNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDogImmuneNoTracker = false ;

                           public boolean isDogImmuneNoSpecified(){
                               return localDogImmuneNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDogImmuneNo(){
                               return localDogImmuneNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param DogImmuneNo
                               */
                               public void setDogImmuneNo(String param){
                            localDogImmuneNoTracker = true;

                                            this.localDogImmuneNo=param;


                               }


                        /**
                        * field for DogLicenseNo
                        */


                                    protected String localDogLicenseNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDogLicenseNoTracker = false ;

                           public boolean isDogLicenseNoSpecified(){
                               return localDogLicenseNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDogLicenseNo(){
                               return localDogLicenseNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param DogLicenseNo
                               */
                               public void setDogLicenseNo(String param){
                            localDogLicenseNoTracker = true;

                                            this.localDogLicenseNo=param;


                               }


                        /**
                        * field for DogStyle
                        */


                                    protected String localDogStyle ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDogStyleTracker = false ;

                           public boolean isDogStyleSpecified(){
                               return localDogStyleTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDogStyle(){
                               return localDogStyle;
                           }



                            /**
                               * Auto generated setter method
                               * @param param DogStyle
                               */
                               public void setDogStyle(String param){
                            localDogStyleTracker = true;

                                            this.localDogStyle=param;


                               }


                        /**
                        * field for InsuredArea
                        */


                                    protected String localInsuredArea ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInsuredAreaTracker = false ;

                           public boolean isInsuredAreaSpecified(){
                               return localInsuredAreaTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInsuredArea(){
                               return localInsuredArea;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InsuredArea
                               */
                               public void setInsuredArea(String param){
                            localInsuredAreaTracker = true;

                                            this.localInsuredArea=param;


                               }


                        /**
                        * field for SpecialInfoNo
                        */


                                    protected String localSpecialInfoNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSpecialInfoNoTracker = false ;

                           public boolean isSpecialInfoNoSpecified(){
                               return localSpecialInfoNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSpecialInfoNo(){
                               return localSpecialInfoNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SpecialInfoNo
                               */
                               public void setSpecialInfoNo(String param){
                            localSpecialInfoNoTracker = true;

                                            this.localSpecialInfoNo=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":SpecialInfoEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "SpecialInfoEhm",
                           xmlWriter);
                   }


                   }
                if (localBusinessTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "businessType", xmlWriter);


                                          if (localBusinessType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBusinessType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localCompanyTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "companyType", xmlWriter);


                                          if (localCompanyType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localCompanyType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDogImmuneNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "dogImmuneNo", xmlWriter);


                                          if (localDogImmuneNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDogImmuneNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDogLicenseNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "dogLicenseNo", xmlWriter);


                                          if (localDogLicenseNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDogLicenseNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDogStyleTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "dogStyle", xmlWriter);


                                          if (localDogStyle==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDogStyle);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInsuredAreaTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "insuredArea", xmlWriter);


                                          if (localInsuredArea==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInsuredArea);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSpecialInfoNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "specialInfoNo", xmlWriter);


                                          if (localSpecialInfoNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSpecialInfoNo);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBusinessTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "businessType"));

                                         elementList.add(localBusinessType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessType));
                                    } if (localCompanyTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "companyType"));

                                         elementList.add(localCompanyType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyType));
                                    } if (localDogImmuneNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "dogImmuneNo"));

                                         elementList.add(localDogImmuneNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDogImmuneNo));
                                    } if (localDogLicenseNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "dogLicenseNo"));

                                         elementList.add(localDogLicenseNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDogLicenseNo));
                                    } if (localDogStyleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "dogStyle"));

                                         elementList.add(localDogStyle==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDogStyle));
                                    } if (localInsuredAreaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "insuredArea"));

                                         elementList.add(localInsuredArea==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuredArea));
                                    } if (localSpecialInfoNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "specialInfoNo"));

                                         elementList.add(localSpecialInfoNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSpecialInfoNo));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static SpecialInfoEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            SpecialInfoEhm object =
                new SpecialInfoEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"SpecialInfoEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (SpecialInfoEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","businessType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBusinessType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","companyType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setCompanyType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","dogImmuneNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDogImmuneNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","dogLicenseNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDogLicenseNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","dogStyle").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDogStyle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insuredArea").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInsuredArea(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","specialInfoNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSpecialInfoNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class ItemKindAddrEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ItemKindAddrEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for Address
                        */


                                    protected String localAddress ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressTracker = false ;

                           public boolean isAddressSpecified(){
                               return localAddressTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAddress(){
                               return localAddress;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Address
                               */
                               public void setAddress(String param){
                            localAddressTracker = true;

                                            this.localAddress=param;


                               }


                        /**
                        * field for AddressNo
                        */


                                    protected String localAddressNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressNoTracker = false ;

                           public boolean isAddressNoSpecified(){
                               return localAddressNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAddressNo(){
                               return localAddressNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AddressNo
                               */
                               public void setAddressNo(String param){
                            localAddressNoTracker = true;

                                            this.localAddressNo=param;


                               }


                        /**
                        * field for AppNum
                        */


                                    protected String localAppNum ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAppNumTracker = false ;

                           public boolean isAppNumSpecified(){
                               return localAppNumTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAppNum(){
                               return localAppNum;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AppNum
                               */
                               public void setAppNum(String param){
                            localAppNumTracker = true;

                                            this.localAppNum=param;


                               }


                        /**
                        * field for City
                        */


                                    protected String localCity ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityTracker = false ;

                           public boolean isCitySpecified(){
                               return localCityTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getCity(){
                               return localCity;
                           }



                            /**
                               * Auto generated setter method
                               * @param param City
                               */
                               public void setCity(String param){
                            localCityTracker = true;

                                            this.localCity=param;


                               }


                        /**
                        * field for District
                        */


                                    protected String localDistrict ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDistrictTracker = false ;

                           public boolean isDistrictSpecified(){
                               return localDistrictTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDistrict(){
                               return localDistrict;
                           }



                            /**
                               * Auto generated setter method
                               * @param param District
                               */
                               public void setDistrict(String param){
                            localDistrictTracker = true;

                                            this.localDistrict=param;


                               }


                        /**
                        * field for PostCode
                        */


                                    protected String localPostCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPostCodeTracker = false ;

                           public boolean isPostCodeSpecified(){
                               return localPostCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPostCode(){
                               return localPostCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param PostCode
                               */
                               public void setPostCode(String param){
                            localPostCodeTracker = true;

                                            this.localPostCode=param;


                               }


                        /**
                        * field for Province
                        */


                                    protected String localProvince ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProvinceTracker = false ;

                           public boolean isProvinceSpecified(){
                               return localProvinceTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getProvince(){
                               return localProvince;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Province
                               */
                               public void setProvince(String param){
                            localProvinceTracker = true;

                                            this.localProvince=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ItemKindAddrEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ItemKindAddrEhm",
                           xmlWriter);
                   }


                   }
                if (localAddressTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "address", xmlWriter);


                                          if (localAddress==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAddress);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAddressNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "addressNo", xmlWriter);


                                          if (localAddressNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAddressNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAppNumTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "appNum", xmlWriter);


                                          if (localAppNum==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAppNum);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localCityTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "city", xmlWriter);


                                          if (localCity==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localCity);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDistrictTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "district", xmlWriter);


                                          if (localDistrict==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDistrict);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPostCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "postCode", xmlWriter);


                                          if (localPostCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPostCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localProvinceTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "province", xmlWriter);


                                          if (localProvince==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localProvince);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddressTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "address"));

                                         elementList.add(localAddress==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddress));
                                    } if (localAddressNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "addressNo"));

                                         elementList.add(localAddressNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressNo));
                                    } if (localAppNumTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "appNum"));

                                         elementList.add(localAppNum==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppNum));
                                    } if (localCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "city"));

                                         elementList.add(localCity==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCity));
                                    } if (localDistrictTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "district"));

                                         elementList.add(localDistrict==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDistrict));
                                    } if (localPostCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "postCode"));

                                         elementList.add(localPostCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPostCode));
                                    } if (localProvinceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "province"));

                                         elementList.add(localProvince==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProvince));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ItemKindAddrEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            ItemKindAddrEhm object =
                new ItemKindAddrEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ItemKindAddrEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ItemKindAddrEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","address").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAddress(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","addressNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAddressNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","appNum").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAppNum(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","city").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","district").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDistrict(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","postCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPostCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","province").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setProvince(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class ServiceResponse
        implements org.apache.axis2.databinding.ADBBean{

                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com",
                "serviceResponse",
                "ns3");



                        /**
                        * field for _return
                        */


                                    protected ProposalSaveResponse local_return ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local_returnTracker = false ;

                           public boolean is_returnSpecified(){
                               return local_returnTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return ProposalSaveResponse
                           */
                           public  ProposalSaveResponse get_return(){
                               return local_return;
                           }



                            /**
                               * Auto generated setter method
                               * @param param _return
                               */
                               public void set_return(ProposalSaveResponse param){
                            local_returnTracker = true;

                                            this.local_return=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":serviceResponse",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "serviceResponse",
                           xmlWriter);
                   }


                   }
                if (local_returnTracker){
                                    if (local_return==null){

                                        writeStartElement(null, "http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com", "return", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     local_return.serialize(new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com","return"),
                                        xmlWriter);
                                    }
                                }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (local_returnTracker){
                            elementList.add(new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com",
                                                                      "return"));


                                    elementList.add(local_return==null?null:
                                    local_return);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ServiceResponse parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            ServiceResponse object =
                new ServiceResponse();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"serviceResponse".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ServiceResponse) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://service.proposalSave.brokenScreen.webServiceCenter.sinosoft.com","return").equals(reader.getName())){

                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.set_return(null);
                                          reader.next();

                                            reader.next();

                                      }else{

                                                object.set_return(ProposalSaveResponse.Factory.parse(reader));

                                        reader.next();
                                    }
                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class ItemKindEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ItemKindEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for AddressNo
                        */


                                    protected String localAddressNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressNoTracker = false ;

                           public boolean isAddressNoSpecified(){
                               return localAddressNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAddressNo(){
                               return localAddressNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AddressNo
                               */
                               public void setAddressNo(String param){
                            localAddressNoTracker = true;

                                            this.localAddressNo=param;


                               }


                        /**
                        * field for Amount
                        */


                                    protected String localAmount ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmountTracker = false ;

                           public boolean isAmountSpecified(){
                               return localAmountTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAmount(){
                               return localAmount;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Amount
                               */
                               public void setAmount(String param){
                            localAmountTracker = true;

                                            this.localAmount=param;


                               }


                        /**
                        * field for Ext1
                        */


                                    protected String localExt1 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExt1Tracker = false ;

                           public boolean isExt1Specified(){
                               return localExt1Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getExt1(){
                               return localExt1;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Ext1
                               */
                               public void setExt1(String param){
                            localExt1Tracker = true;

                                            this.localExt1=param;


                               }


                        /**
                        * field for Ext2
                        */


                                    protected String localExt2 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExt2Tracker = false ;

                           public boolean isExt2Specified(){
                               return localExt2Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getExt2(){
                               return localExt2;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Ext2
                               */
                               public void setExt2(String param){
                            localExt2Tracker = true;

                                            this.localExt2=param;


                               }


                        /**
                        * field for Ext3
                        */


                                    protected String localExt3 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExt3Tracker = false ;

                           public boolean isExt3Specified(){
                               return localExt3Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getExt3(){
                               return localExt3;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Ext3
                               */
                               public void setExt3(String param){
                            localExt3Tracker = true;

                                            this.localExt3=param;


                               }


                        /**
                        * field for Ext4
                        */


                                    protected String localExt4 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExt4Tracker = false ;

                           public boolean isExt4Specified(){
                               return localExt4Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getExt4(){
                               return localExt4;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Ext4
                               */
                               public void setExt4(String param){
                            localExt4Tracker = true;

                                            this.localExt4=param;


                               }


                        /**
                        * field for Ext5
                        */


                                    protected String localExt5 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExt5Tracker = false ;

                           public boolean isExt5Specified(){
                               return localExt5Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getExt5(){
                               return localExt5;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Ext5
                               */
                               public void setExt5(String param){
                            localExt5Tracker = true;

                                            this.localExt5=param;


                               }


                        /**
                        * field for ItemCode
                        */


                                    protected String localItemCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localItemCodeTracker = false ;

                           public boolean isItemCodeSpecified(){
                               return localItemCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getItemCode(){
                               return localItemCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ItemCode
                               */
                               public void setItemCode(String param){
                            localItemCodeTracker = true;

                                            this.localItemCode=param;


                               }


                        /**
                        * field for ItemName
                        */


                                    protected String localItemName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localItemNameTracker = false ;

                           public boolean isItemNameSpecified(){
                               return localItemNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getItemName(){
                               return localItemName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ItemName
                               */
                               public void setItemName(String param){
                            localItemNameTracker = true;

                                            this.localItemName=param;


                               }


                        /**
                        * field for KindCode
                        */


                                    protected String localKindCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKindCodeTracker = false ;

                           public boolean isKindCodeSpecified(){
                               return localKindCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getKindCode(){
                               return localKindCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param KindCode
                               */
                               public void setKindCode(String param){
                            localKindCodeTracker = true;

                                            this.localKindCode=param;


                               }


                        /**
                        * field for KindName
                        */


                                    protected String localKindName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKindNameTracker = false ;

                           public boolean isKindNameSpecified(){
                               return localKindNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getKindName(){
                               return localKindName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param KindName
                               */
                               public void setKindName(String param){
                            localKindNameTracker = true;

                                            this.localKindName=param;


                               }


                        /**
                        * field for LimitEhmArray
                        * This was an Array!
                        */


                                    protected LimitEhm[] localLimitEhmArray ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLimitEhmArrayTracker = false ;

                           public boolean isLimitEhmArraySpecified(){
                               return localLimitEhmArrayTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return LimitEhm[]
                           */
                           public  LimitEhm[] getLimitEhmArray(){
                               return localLimitEhmArray;
                           }






                              /**
                               * validate the array for LimitEhmArray
                               */
                              protected void validateLimitEhmArray(LimitEhm[] param){

                              }


                             /**
                              * Auto generated setter method
                              * @param param LimitEhmArray
                              */
                              public void setLimitEhmArray(LimitEhm[] param){

                                   validateLimitEhmArray(param);

                               localLimitEhmArrayTracker = true;

                                      this.localLimitEhmArray=param;
                              }



                             /**
                             * Auto generated add method for the array for convenience
                             * @param param LimitEhm
                             */
                             public void addLimitEhmArray(LimitEhm param){
                                   if (localLimitEhmArray == null){
                                   localLimitEhmArray = new LimitEhm[]{};
                                   }


                                 //update the setting tracker
                                localLimitEhmArrayTracker = true;


                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLimitEhmArray);
                               list.add(param);
                               this.localLimitEhmArray =
                             (LimitEhm[])list.toArray(
                            new LimitEhm[list.size()]);

                             }


                        /**
                        * field for LimitType
                        */


                                    protected String localLimitType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLimitTypeTracker = false ;

                           public boolean isLimitTypeSpecified(){
                               return localLimitTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getLimitType(){
                               return localLimitType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param LimitType
                               */
                               public void setLimitType(String param){
                            localLimitTypeTracker = true;

                                            this.localLimitType=param;


                               }


                        /**
                        * field for LimtFee
                        */


                                    protected String localLimtFee ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLimtFeeTracker = false ;

                           public boolean isLimtFeeSpecified(){
                               return localLimtFeeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getLimtFee(){
                               return localLimtFee;
                           }



                            /**
                               * Auto generated setter method
                               * @param param LimtFee
                               */
                               public void setLimtFee(String param){
                            localLimtFeeTracker = true;

                                            this.localLimtFee=param;


                               }


                        /**
                        * field for ModeCode
                        */


                                    protected String localModeCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localModeCodeTracker = false ;

                           public boolean isModeCodeSpecified(){
                               return localModeCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getModeCode(){
                               return localModeCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ModeCode
                               */
                               public void setModeCode(String param){
                            localModeCodeTracker = true;

                                            this.localModeCode=param;


                               }


                        /**
                        * field for ModeName
                        */


                                    protected String localModeName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localModeNameTracker = false ;

                           public boolean isModeNameSpecified(){
                               return localModeNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getModeName(){
                               return localModeName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ModeName
                               */
                               public void setModeName(String param){
                            localModeNameTracker = true;

                                            this.localModeName=param;


                               }


                        /**
                        * field for Premium
                        */


                                    protected String localPremium ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPremiumTracker = false ;

                           public boolean isPremiumSpecified(){
                               return localPremiumTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPremium(){
                               return localPremium;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Premium
                               */
                               public void setPremium(String param){
                            localPremiumTracker = true;

                                            this.localPremium=param;


                               }


                        /**
                        * field for Rate
                        */


                                    protected String localRate ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRateTracker = false ;

                           public boolean isRateSpecified(){
                               return localRateTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRate(){
                               return localRate;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Rate
                               */
                               public void setRate(String param){
                            localRateTracker = true;

                                            this.localRate=param;


                               }


                        /**
                        * field for SerialNo
                        */


                                    protected String localSerialNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSerialNoTracker = false ;

                           public boolean isSerialNoSpecified(){
                               return localSerialNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSerialNo(){
                               return localSerialNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SerialNo
                               */
                               public void setSerialNo(String param){
                            localSerialNoTracker = true;

                                            this.localSerialNo=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ItemKindEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ItemKindEhm",
                           xmlWriter);
                   }


                   }
                if (localAddressNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "addressNo", xmlWriter);


                                          if (localAddressNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAddressNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAmountTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "amount", xmlWriter);


                                          if (localAmount==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAmount);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localExt1Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "ext1", xmlWriter);


                                          if (localExt1==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localExt1);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localExt2Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "ext2", xmlWriter);


                                          if (localExt2==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localExt2);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localExt3Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "ext3", xmlWriter);


                                          if (localExt3==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localExt3);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localExt4Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "ext4", xmlWriter);


                                          if (localExt4==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localExt4);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localExt5Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "ext5", xmlWriter);


                                          if (localExt5==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localExt5);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localItemCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "itemCode", xmlWriter);


                                          if (localItemCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localItemCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localItemNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "itemName", xmlWriter);


                                          if (localItemName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localItemName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localKindCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "kindCode", xmlWriter);


                                          if (localKindCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localKindCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localKindNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "kindName", xmlWriter);


                                          if (localKindName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localKindName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localLimitEhmArrayTracker){
                                       if (localLimitEhmArray!=null){
                                            for (int i = 0;i < localLimitEhmArray.length;i++){
                                                if (localLimitEhmArray[i] != null){
                                                 localLimitEhmArray[i].serialize(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","limitEhmArray"),
                                                           xmlWriter);
                                                } else {

                                                            writeStartElement(null, "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "limitEhmArray", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();

                                                }

                                            }
                                     } else {

                                                writeStartElement(null, "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "limitEhmArray", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();

                                    }
                                 } if (localLimitTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "limitType", xmlWriter);


                                          if (localLimitType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localLimitType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localLimtFeeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "limtFee", xmlWriter);


                                          if (localLimtFee==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localLimtFee);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localModeCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "modeCode", xmlWriter);


                                          if (localModeCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localModeCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localModeNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "modeName", xmlWriter);


                                          if (localModeName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localModeName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPremiumTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "premium", xmlWriter);


                                          if (localPremium==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPremium);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localRateTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "rate", xmlWriter);


                                          if (localRate==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRate);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSerialNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "serialNo", xmlWriter);


                                          if (localSerialNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSerialNo);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddressNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "addressNo"));

                                         elementList.add(localAddressNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressNo));
                                    } if (localAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "amount"));

                                         elementList.add(localAmount==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmount));
                                    } if (localExt1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "ext1"));

                                         elementList.add(localExt1==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExt1));
                                    } if (localExt2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "ext2"));

                                         elementList.add(localExt2==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExt2));
                                    } if (localExt3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "ext3"));

                                         elementList.add(localExt3==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExt3));
                                    } if (localExt4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "ext4"));

                                         elementList.add(localExt4==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExt4));
                                    } if (localExt5Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "ext5"));

                                         elementList.add(localExt5==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExt5));
                                    } if (localItemCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "itemCode"));

                                         elementList.add(localItemCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemCode));
                                    } if (localItemNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "itemName"));

                                         elementList.add(localItemName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localItemName));
                                    } if (localKindCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "kindCode"));

                                         elementList.add(localKindCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKindCode));
                                    } if (localKindNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "kindName"));

                                         elementList.add(localKindName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKindName));
                                    } if (localLimitEhmArrayTracker){
                             if (localLimitEhmArray!=null) {
                                 for (int i = 0;i < localLimitEhmArray.length;i++){

                                    if (localLimitEhmArray[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "limitEhmArray"));
                                         elementList.add(localLimitEhmArray[i]);
                                    } else {

                                                elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "limitEhmArray"));
                                                elementList.add(null);

                                    }

                                 }
                             } else {

                                        elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "limitEhmArray"));
                                        elementList.add(localLimitEhmArray);

                             }

                        } if (localLimitTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "limitType"));

                                         elementList.add(localLimitType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLimitType));
                                    } if (localLimtFeeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "limtFee"));

                                         elementList.add(localLimtFee==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLimtFee));
                                    } if (localModeCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "modeCode"));

                                         elementList.add(localModeCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModeCode));
                                    } if (localModeNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "modeName"));

                                         elementList.add(localModeName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModeName));
                                    } if (localPremiumTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "premium"));

                                         elementList.add(localPremium==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPremium));
                                    } if (localRateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "rate"));

                                         elementList.add(localRate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRate));
                                    } if (localSerialNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "serialNo"));

                                         elementList.add(localSerialNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSerialNo));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ItemKindEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            ItemKindEhm object =
                new ItemKindEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ItemKindEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ItemKindEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                        java.util.ArrayList list12 = new java.util.ArrayList();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","addressNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAddressNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","amount").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","ext1").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setExt1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","ext2").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setExt2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","ext3").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setExt3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","ext4").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setExt4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","ext5").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setExt5(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setItemCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setItemName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","kindCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setKindCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","kindName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setKindName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","limitEhmArray").equals(reader.getName())){



                                    // Process the array and step past its final element's end.

                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list12.add(null);
                                                              reader.next();
                                                          } else {
                                                        list12.add(LimitEhm.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone12 = false;
                                                        while(!loopDone12){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone12 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","limitEhmArray").equals(reader.getName())){

                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list12.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list12.add(LimitEhm.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone12 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array

                                                        object.setLimitEhmArray((LimitEhm[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                LimitEhm.class,
                                                                list12));

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","limitType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setLimitType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","limtFee").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setLimtFee(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","modeCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setModeCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","modeName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setModeName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","premium").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPremium(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","rate").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","serialNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSerialNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class MainEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = MainEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for AgentCode
                        */


                                    protected String localAgentCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAgentCodeTracker = false ;

                           public boolean isAgentCodeSpecified(){
                               return localAgentCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAgentCode(){
                               return localAgentCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AgentCode
                               */
                               public void setAgentCode(String param){
                            localAgentCodeTracker = true;

                                            this.localAgentCode=param;


                               }


                        /**
                        * field for AgreementNo
                        */


                                    protected String localAgreementNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAgreementNoTracker = false ;

                           public boolean isAgreementNoSpecified(){
                               return localAgreementNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAgreementNo(){
                               return localAgreementNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AgreementNo
                               */
                               public void setAgreementNo(String param){
                            localAgreementNoTracker = true;

                                            this.localAgreementNo=param;


                               }


                        /**
                        * field for ApproverCode
                        */


                                    protected String localApproverCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproverCodeTracker = false ;

                           public boolean isApproverCodeSpecified(){
                               return localApproverCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getApproverCode(){
                               return localApproverCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ApproverCode
                               */
                               public void setApproverCode(String param){
                            localApproverCodeTracker = true;

                                            this.localApproverCode=param;


                               }


                        /**
                        * field for ArbitBoardCode
                        */


                                    protected String localArbitBoardCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localArbitBoardCodeTracker = false ;

                           public boolean isArbitBoardCodeSpecified(){
                               return localArbitBoardCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getArbitBoardCode(){
                               return localArbitBoardCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ArbitBoardCode
                               */
                               public void setArbitBoardCode(String param){
                            localArbitBoardCodeTracker = true;

                                            this.localArbitBoardCode=param;


                               }


                        /**
                        * field for ArbitBoardName
                        */


                                    protected String localArbitBoardName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localArbitBoardNameTracker = false ;

                           public boolean isArbitBoardNameSpecified(){
                               return localArbitBoardNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getArbitBoardName(){
                               return localArbitBoardName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ArbitBoardName
                               */
                               public void setArbitBoardName(String param){
                            localArbitBoardNameTracker = true;

                                            this.localArbitBoardName=param;


                               }


                        /**
                        * field for ArgueSolution
                        */


                                    protected String localArgueSolution ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localArgueSolutionTracker = false ;

                           public boolean isArgueSolutionSpecified(){
                               return localArgueSolutionTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getArgueSolution(){
                               return localArgueSolution;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ArgueSolution
                               */
                               public void setArgueSolution(String param){
                            localArgueSolutionTracker = true;

                                            this.localArgueSolution=param;


                               }


                        /**
                        * field for Asyn
                        */


                                    protected String localAsyn ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAsynTracker = false ;

                           public boolean isAsynSpecified(){
                               return localAsynTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAsyn(){
                               return localAsyn;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Asyn
                               */
                               public void setAsyn(String param){
                            localAsynTracker = true;

                                            this.localAsyn=param;


                               }


                        /**
                        * field for BusinessDetail
                        */


                                    protected String localBusinessDetail ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessDetailTracker = false ;

                           public boolean isBusinessDetailSpecified(){
                               return localBusinessDetailTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBusinessDetail(){
                               return localBusinessDetail;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BusinessDetail
                               */
                               public void setBusinessDetail(String param){
                            localBusinessDetailTracker = true;

                                            this.localBusinessDetail=param;


                               }


                        /**
                        * field for BusinessID
                        */


                                    protected String localBusinessID ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessIDTracker = false ;

                           public boolean isBusinessIDSpecified(){
                               return localBusinessIDTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBusinessID(){
                               return localBusinessID;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BusinessID
                               */
                               public void setBusinessID(String param){
                            localBusinessIDTracker = true;

                                            this.localBusinessID=param;


                               }


                        /**
                        * field for BusinessNature
                        */


                                    protected String localBusinessNature ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessNatureTracker = false ;

                           public boolean isBusinessNatureSpecified(){
                               return localBusinessNatureTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBusinessNature(){
                               return localBusinessNature;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BusinessNature
                               */
                               public void setBusinessNature(String param){
                            localBusinessNatureTracker = true;

                                            this.localBusinessNature=param;


                               }


                        /**
                        * field for BusinessSource
                        */


                                    protected String localBusinessSource ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessSourceTracker = false ;

                           public boolean isBusinessSourceSpecified(){
                               return localBusinessSourceTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBusinessSource(){
                               return localBusinessSource;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BusinessSource
                               */
                               public void setBusinessSource(String param){
                            localBusinessSourceTracker = true;

                                            this.localBusinessSource=param;


                               }


                        /**
                        * field for ChannelCode
                        */


                                    protected String localChannelCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChannelCodeTracker = false ;

                           public boolean isChannelCodeSpecified(){
                               return localChannelCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getChannelCode(){
                               return localChannelCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ChannelCode
                               */
                               public void setChannelCode(String param){
                            localChannelCodeTracker = true;

                                            this.localChannelCode=param;


                               }


                        /**
                        * field for CityCode
                        */


                                    protected String localCityCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityCodeTracker = false ;

                           public boolean isCityCodeSpecified(){
                               return localCityCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getCityCode(){
                               return localCityCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param CityCode
                               */
                               public void setCityCode(String param){
                            localCityCodeTracker = true;

                                            this.localCityCode=param;


                               }


                        /**
                        * field for ClassCode
                        */


                                    protected String localClassCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClassCodeTracker = false ;

                           public boolean isClassCodeSpecified(){
                               return localClassCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getClassCode(){
                               return localClassCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ClassCode
                               */
                               public void setClassCode(String param){
                            localClassCodeTracker = true;

                                            this.localClassCode=param;


                               }


                        /**
                        * field for ComCode
                        */


                                    protected String localComCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComCodeTracker = false ;

                           public boolean isComCodeSpecified(){
                               return localComCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getComCode(){
                               return localComCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ComCode
                               */
                               public void setComCode(String param){
                            localComCodeTracker = true;

                                            this.localComCode=param;


                               }


                        /**
                        * field for ComID
                        */


                                    protected String localComID ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComIDTracker = false ;

                           public boolean isComIDSpecified(){
                               return localComIDTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getComID(){
                               return localComID;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ComID
                               */
                               public void setComID(String param){
                            localComIDTracker = true;

                                            this.localComID=param;


                               }


                        /**
                        * field for DataSource
                        */


                                    protected String localDataSource ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDataSourceTracker = false ;

                           public boolean isDataSourceSpecified(){
                               return localDataSourceTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDataSource(){
                               return localDataSource;
                           }



                            /**
                               * Auto generated setter method
                               * @param param DataSource
                               */
                               public void setDataSource(String param){
                            localDataSourceTracker = true;

                                            this.localDataSource=param;


                               }


                        /**
                        * field for DisRate
                        */


                                    protected String localDisRate ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDisRateTracker = false ;

                           public boolean isDisRateSpecified(){
                               return localDisRateTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDisRate(){
                               return localDisRate;
                           }



                            /**
                               * Auto generated setter method
                               * @param param DisRate
                               */
                               public void setDisRate(String param){
                            localDisRateTracker = true;

                                            this.localDisRate=param;


                               }


                        /**
                        * field for Discount
                        */


                                    protected String localDiscount ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDiscountTracker = false ;

                           public boolean isDiscountSpecified(){
                               return localDiscountTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDiscount(){
                               return localDiscount;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Discount
                               */
                               public void setDiscount(String param){
                            localDiscountTracker = true;

                                            this.localDiscount=param;


                               }


                        /**
                        * field for EndDate
                        */


                                    protected String localEndDate ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEndDateTracker = false ;

                           public boolean isEndDateSpecified(){
                               return localEndDateTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getEndDate(){
                               return localEndDate;
                           }



                            /**
                               * Auto generated setter method
                               * @param param EndDate
                               */
                               public void setEndDate(String param){
                            localEndDateTracker = true;

                                            this.localEndDate=param;


                               }


                        /**
                        * field for FromID
                        */


                                    protected String localFromID ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFromIDTracker = false ;

                           public boolean isFromIDSpecified(){
                               return localFromIDTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getFromID(){
                               return localFromID;
                           }



                            /**
                               * Auto generated setter method
                               * @param param FromID
                               */
                               public void setFromID(String param){
                            localFromIDTracker = true;

                                            this.localFromID=param;


                               }


                        /**
                        * field for Handler1Code
                        */


                                    protected String localHandler1Code ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHandler1CodeTracker = false ;

                           public boolean isHandler1CodeSpecified(){
                               return localHandler1CodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getHandler1Code(){
                               return localHandler1Code;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Handler1Code
                               */
                               public void setHandler1Code(String param){
                            localHandler1CodeTracker = true;

                                            this.localHandler1Code=param;


                               }


                        /**
                        * field for HandlerCode
                        */


                                    protected String localHandlerCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHandlerCodeTracker = false ;

                           public boolean isHandlerCodeSpecified(){
                               return localHandlerCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getHandlerCode(){
                               return localHandlerCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param HandlerCode
                               */
                               public void setHandlerCode(String param){
                            localHandlerCodeTracker = true;

                                            this.localHandlerCode=param;


                               }


                        /**
                        * field for InsPeriod
                        */


                                    protected String localInsPeriod ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInsPeriodTracker = false ;

                           public boolean isInsPeriodSpecified(){
                               return localInsPeriodTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInsPeriod(){
                               return localInsPeriod;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InsPeriod
                               */
                               public void setInsPeriod(String param){
                            localInsPeriodTracker = true;

                                            this.localInsPeriod=param;


                               }


                        /**
                        * field for InsureArea
                        */


                                    protected String localInsureArea ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInsureAreaTracker = false ;

                           public boolean isInsureAreaSpecified(){
                               return localInsureAreaTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInsureArea(){
                               return localInsureArea;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InsureArea
                               */
                               public void setInsureArea(String param){
                            localInsureAreaTracker = true;

                                            this.localInsureArea=param;


                               }


                        /**
                        * field for JfeeFlag
                        */


                                    protected String localJfeeFlag ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localJfeeFlagTracker = false ;

                           public boolean isJfeeFlagSpecified(){
                               return localJfeeFlagTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getJfeeFlag(){
                               return localJfeeFlag;
                           }



                            /**
                               * Auto generated setter method
                               * @param param JfeeFlag
                               */
                               public void setJfeeFlag(String param){
                            localJfeeFlagTracker = true;

                                            this.localJfeeFlag=param;


                               }


                        /**
                        * field for Judicalscope
                        */


                                    protected String localJudicalscope ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localJudicalscopeTracker = false ;

                           public boolean isJudicalscopeSpecified(){
                               return localJudicalscopeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getJudicalscope(){
                               return localJudicalscope;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Judicalscope
                               */
                               public void setJudicalscope(String param){
                            localJudicalscopeTracker = true;

                                            this.localJudicalscope=param;


                               }


                        /**
                        * field for MainInsuredCount
                        */


                                    protected String localMainInsuredCount ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMainInsuredCountTracker = false ;

                           public boolean isMainInsuredCountSpecified(){
                               return localMainInsuredCountTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getMainInsuredCount(){
                               return localMainInsuredCount;
                           }



                            /**
                               * Auto generated setter method
                               * @param param MainInsuredCount
                               */
                               public void setMainInsuredCount(String param){
                            localMainInsuredCountTracker = true;

                                            this.localMainInsuredCount=param;


                               }


                        /**
                        * field for MakeCom
                        */


                                    protected String localMakeCom ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMakeComTracker = false ;

                           public boolean isMakeComSpecified(){
                               return localMakeComTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getMakeCom(){
                               return localMakeCom;
                           }



                            /**
                               * Auto generated setter method
                               * @param param MakeCom
                               */
                               public void setMakeCom(String param){
                            localMakeComTracker = true;

                                            this.localMakeCom=param;


                               }


                        /**
                        * field for ModeCode
                        */


                                    protected String localModeCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localModeCodeTracker = false ;

                           public boolean isModeCodeSpecified(){
                               return localModeCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getModeCode(){
                               return localModeCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ModeCode
                               */
                               public void setModeCode(String param){
                            localModeCodeTracker = true;

                                            this.localModeCode=param;


                               }


                        /**
                        * field for ModeName
                        */


                                    protected String localModeName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localModeNameTracker = false ;

                           public boolean isModeNameSpecified(){
                               return localModeNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getModeName(){
                               return localModeName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ModeName
                               */
                               public void setModeName(String param){
                            localModeNameTracker = true;

                                            this.localModeName=param;


                               }


                        /**
                        * field for NationFlag
                        */


                                    protected String localNationFlag ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNationFlagTracker = false ;

                           public boolean isNationFlagSpecified(){
                               return localNationFlagTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getNationFlag(){
                               return localNationFlag;
                           }



                            /**
                               * Auto generated setter method
                               * @param param NationFlag
                               */
                               public void setNationFlag(String param){
                            localNationFlagTracker = true;

                                            this.localNationFlag=param;


                               }


                        /**
                        * field for OfficeType
                        */


                                    protected String localOfficeType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOfficeTypeTracker = false ;

                           public boolean isOfficeTypeSpecified(){
                               return localOfficeTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOfficeType(){
                               return localOfficeType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OfficeType
                               */
                               public void setOfficeType(String param){
                            localOfficeTypeTracker = true;

                                            this.localOfficeType=param;


                               }


                        /**
                        * field for OperatorCode
                        */


                                    protected String localOperatorCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOperatorCodeTracker = false ;

                           public boolean isOperatorCodeSpecified(){
                               return localOperatorCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOperatorCode(){
                               return localOperatorCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OperatorCode
                               */
                               public void setOperatorCode(String param){
                            localOperatorCodeTracker = true;

                                            this.localOperatorCode=param;


                               }


                        /**
                        * field for OthFee
                        */


                                    protected String localOthFee ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthFeeTracker = false ;

                           public boolean isOthFeeSpecified(){
                               return localOthFeeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthFee(){
                               return localOthFee;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthFee
                               */
                               public void setOthFee(String param){
                            localOthFeeTracker = true;

                                            this.localOthFee=param;


                               }


                        /**
                        * field for OthField1
                        */


                                    protected String localOthField1 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField1Tracker = false ;

                           public boolean isOthField1Specified(){
                               return localOthField1Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField1(){
                               return localOthField1;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField1
                               */
                               public void setOthField1(String param){
                            localOthField1Tracker = true;

                                            this.localOthField1=param;


                               }


                        /**
                        * field for OthField2
                        */


                                    protected String localOthField2 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField2Tracker = false ;

                           public boolean isOthField2Specified(){
                               return localOthField2Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField2(){
                               return localOthField2;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField2
                               */
                               public void setOthField2(String param){
                            localOthField2Tracker = true;

                                            this.localOthField2=param;


                               }


                        /**
                        * field for OthField3
                        */


                                    protected String localOthField3 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField3Tracker = false ;

                           public boolean isOthField3Specified(){
                               return localOthField3Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField3(){
                               return localOthField3;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField3
                               */
                               public void setOthField3(String param){
                            localOthField3Tracker = true;

                                            this.localOthField3=param;


                               }


                        /**
                        * field for OthField4
                        */


                                    protected String localOthField4 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField4Tracker = false ;

                           public boolean isOthField4Specified(){
                               return localOthField4Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField4(){
                               return localOthField4;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField4
                               */
                               public void setOthField4(String param){
                            localOthField4Tracker = true;

                                            this.localOthField4=param;


                               }


                        /**
                        * field for OthField5
                        */


                                    protected String localOthField5 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField5Tracker = false ;

                           public boolean isOthField5Specified(){
                               return localOthField5Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField5(){
                               return localOthField5;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField5
                               */
                               public void setOthField5(String param){
                            localOthField5Tracker = true;

                                            this.localOthField5=param;


                               }


                        /**
                        * field for OthOrderCode
                        */


                                    protected String localOthOrderCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthOrderCodeTracker = false ;

                           public boolean isOthOrderCodeSpecified(){
                               return localOthOrderCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthOrderCode(){
                               return localOthOrderCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthOrderCode
                               */
                               public void setOthOrderCode(String param){
                            localOthOrderCodeTracker = true;

                                            this.localOthOrderCode=param;


                               }


                        /**
                        * field for OthSerialNo
                        */


                                    protected String localOthSerialNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthSerialNoTracker = false ;

                           public boolean isOthSerialNoSpecified(){
                               return localOthSerialNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthSerialNo(){
                               return localOthSerialNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthSerialNo
                               */
                               public void setOthSerialNo(String param){
                            localOthSerialNoTracker = true;

                                            this.localOthSerialNo=param;


                               }


                        /**
                        * field for PolicyNo
                        */


                                    protected String localPolicyNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPolicyNoTracker = false ;

                           public boolean isPolicyNoSpecified(){
                               return localPolicyNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPolicyNo(){
                               return localPolicyNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param PolicyNo
                               */
                               public void setPolicyNo(String param){
                            localPolicyNoTracker = true;

                                            this.localPolicyNo=param;


                               }


                        /**
                        * field for ProductCode
                        */


                                    protected String localProductCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductCodeTracker = false ;

                           public boolean isProductCodeSpecified(){
                               return localProductCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getProductCode(){
                               return localProductCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ProductCode
                               */
                               public void setProductCode(String param){
                            localProductCodeTracker = true;

                                            this.localProductCode=param;


                               }


                        /**
                        * field for ProposalNo
                        */


                                    protected String localProposalNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProposalNoTracker = false ;

                           public boolean isProposalNoSpecified(){
                               return localProposalNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getProposalNo(){
                               return localProposalNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ProposalNo
                               */
                               public void setProposalNo(String param){
                            localProposalNoTracker = true;

                                            this.localProposalNo=param;


                               }


                        /**
                        * field for ReturnUrl
                        */


                                    protected String localReturnUrl ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReturnUrlTracker = false ;

                           public boolean isReturnUrlSpecified(){
                               return localReturnUrlTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getReturnUrl(){
                               return localReturnUrl;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ReturnUrl
                               */
                               public void setReturnUrl(String param){
                            localReturnUrlTracker = true;

                                            this.localReturnUrl=param;


                               }


                        /**
                        * field for RiskCode
                        */


                                    protected String localRiskCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRiskCodeTracker = false ;

                           public boolean isRiskCodeSpecified(){
                               return localRiskCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRiskCode(){
                               return localRiskCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param RiskCode
                               */
                               public void setRiskCode(String param){
                            localRiskCodeTracker = true;

                                            this.localRiskCode=param;


                               }


                        /**
                        * field for SendTime
                        */


                                    protected String localSendTime ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSendTimeTracker = false ;

                           public boolean isSendTimeSpecified(){
                               return localSendTimeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSendTime(){
                               return localSendTime;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SendTime
                               */
                               public void setSendTime(String param){
                            localSendTimeTracker = true;

                                            this.localSendTime=param;


                               }


                        /**
                        * field for SerialNo
                        */


                                    protected String localSerialNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSerialNoTracker = false ;

                           public boolean isSerialNoSpecified(){
                               return localSerialNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSerialNo(){
                               return localSerialNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SerialNo
                               */
                               public void setSerialNo(String param){
                            localSerialNoTracker = true;

                                            this.localSerialNo=param;


                               }


                        /**
                        * field for StaffCount
                        */


                                    protected String localStaffCount ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStaffCountTracker = false ;

                           public boolean isStaffCountSpecified(){
                               return localStaffCountTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getStaffCount(){
                               return localStaffCount;
                           }



                            /**
                               * Auto generated setter method
                               * @param param StaffCount
                               */
                               public void setStaffCount(String param){
                            localStaffCountTracker = true;

                                            this.localStaffCount=param;


                               }


                        /**
                        * field for StartDate
                        */


                                    protected String localStartDate ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStartDateTracker = false ;

                           public boolean isStartDateSpecified(){
                               return localStartDateTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getStartDate(){
                               return localStartDate;
                           }



                            /**
                               * Auto generated setter method
                               * @param param StartDate
                               */
                               public void setStartDate(String param){
                            localStartDateTracker = true;

                                            this.localStartDate=param;


                               }


                        /**
                        * field for StrOptionsCode
                        */


                                    protected String localStrOptionsCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStrOptionsCodeTracker = false ;

                           public boolean isStrOptionsCodeSpecified(){
                               return localStrOptionsCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getStrOptionsCode(){
                               return localStrOptionsCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param StrOptionsCode
                               */
                               public void setStrOptionsCode(String param){
                            localStrOptionsCodeTracker = true;

                                            this.localStrOptionsCode=param;


                               }


                        /**
                        * field for Structure
                        */


                                    protected String localStructure ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStructureTracker = false ;

                           public boolean isStructureSpecified(){
                               return localStructureTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getStructure(){
                               return localStructure;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Structure
                               */
                               public void setStructure(String param){
                            localStructureTracker = true;

                                            this.localStructure=param;


                               }


                        /**
                        * field for TotalAmount
                        */


                                    protected String localTotalAmount ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotalAmountTracker = false ;

                           public boolean isTotalAmountSpecified(){
                               return localTotalAmountTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getTotalAmount(){
                               return localTotalAmount;
                           }



                            /**
                               * Auto generated setter method
                               * @param param TotalAmount
                               */
                               public void setTotalAmount(String param){
                            localTotalAmountTracker = true;

                                            this.localTotalAmount=param;


                               }


                        /**
                        * field for TotalPremium
                        */


                                    protected String localTotalPremium ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotalPremiumTracker = false ;

                           public boolean isTotalPremiumSpecified(){
                               return localTotalPremiumTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getTotalPremium(){
                               return localTotalPremium;
                           }



                            /**
                               * Auto generated setter method
                               * @param param TotalPremium
                               */
                               public void setTotalPremium(String param){
                            localTotalPremiumTracker = true;

                                            this.localTotalPremium=param;


                               }


                        /**
                        * field for Uuid
                        */


                                    protected String localUuid ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUuidTracker = false ;

                           public boolean isUuidSpecified(){
                               return localUuidTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getUuid(){
                               return localUuid;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Uuid
                               */
                               public void setUuid(String param){
                            localUuidTracker = true;

                                            this.localUuid=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":MainEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "MainEhm",
                           xmlWriter);
                   }


                   }
                if (localAgentCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "agentCode", xmlWriter);


                                          if (localAgentCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAgentCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAgreementNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "agreementNo", xmlWriter);


                                          if (localAgreementNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAgreementNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localApproverCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "approverCode", xmlWriter);


                                          if (localApproverCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localApproverCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localArbitBoardCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "arbitBoardCode", xmlWriter);


                                          if (localArbitBoardCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localArbitBoardCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localArbitBoardNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "arbitBoardName", xmlWriter);


                                          if (localArbitBoardName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localArbitBoardName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localArgueSolutionTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "argueSolution", xmlWriter);


                                          if (localArgueSolution==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localArgueSolution);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAsynTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "asyn", xmlWriter);


                                          if (localAsyn==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAsyn);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBusinessDetailTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "businessDetail", xmlWriter);


                                          if (localBusinessDetail==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBusinessDetail);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBusinessIDTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "businessID", xmlWriter);


                                          if (localBusinessID==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBusinessID);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBusinessNatureTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "businessNature", xmlWriter);


                                          if (localBusinessNature==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBusinessNature);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBusinessSourceTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "businessSource", xmlWriter);


                                          if (localBusinessSource==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBusinessSource);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localChannelCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "channelCode", xmlWriter);


                                          if (localChannelCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localChannelCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localCityCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "cityCode", xmlWriter);


                                          if (localCityCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localCityCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localClassCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "classCode", xmlWriter);


                                          if (localClassCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localClassCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localComCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "comCode", xmlWriter);


                                          if (localComCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localComCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localComIDTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "comID", xmlWriter);


                                          if (localComID==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localComID);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDataSourceTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "dataSource", xmlWriter);


                                          if (localDataSource==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDataSource);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDisRateTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "disRate", xmlWriter);


                                          if (localDisRate==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDisRate);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDiscountTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "discount", xmlWriter);


                                          if (localDiscount==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDiscount);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localEndDateTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "endDate", xmlWriter);


                                          if (localEndDate==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localEndDate);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localFromIDTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "fromID", xmlWriter);


                                          if (localFromID==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localFromID);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localHandler1CodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "handler1Code", xmlWriter);


                                          if (localHandler1Code==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localHandler1Code);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localHandlerCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "handlerCode", xmlWriter);


                                          if (localHandlerCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localHandlerCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInsPeriodTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "insPeriod", xmlWriter);


                                          if (localInsPeriod==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInsPeriod);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInsureAreaTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "insureArea", xmlWriter);


                                          if (localInsureArea==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInsureArea);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localJfeeFlagTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "jfeeFlag", xmlWriter);


                                          if (localJfeeFlag==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localJfeeFlag);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localJudicalscopeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "judicalscope", xmlWriter);


                                          if (localJudicalscope==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localJudicalscope);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localMainInsuredCountTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "mainInsuredCount", xmlWriter);


                                          if (localMainInsuredCount==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localMainInsuredCount);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localMakeComTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "makeCom", xmlWriter);


                                          if (localMakeCom==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localMakeCom);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localModeCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "modeCode", xmlWriter);


                                          if (localModeCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localModeCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localModeNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "modeName", xmlWriter);


                                          if (localModeName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localModeName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localNationFlagTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "nationFlag", xmlWriter);


                                          if (localNationFlag==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localNationFlag);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOfficeTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "officeType", xmlWriter);


                                          if (localOfficeType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOfficeType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOperatorCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "operatorCode", xmlWriter);


                                          if (localOperatorCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOperatorCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthFeeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othFee", xmlWriter);


                                          if (localOthFee==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthFee);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField1Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField1", xmlWriter);


                                          if (localOthField1==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField1);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField2Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField2", xmlWriter);


                                          if (localOthField2==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField2);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField3Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField3", xmlWriter);


                                          if (localOthField3==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField3);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField4Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField4", xmlWriter);


                                          if (localOthField4==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField4);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField5Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField5", xmlWriter);


                                          if (localOthField5==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField5);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthOrderCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othOrderCode", xmlWriter);


                                          if (localOthOrderCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthOrderCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthSerialNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othSerialNo", xmlWriter);


                                          if (localOthSerialNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthSerialNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPolicyNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "policyNo", xmlWriter);


                                          if (localPolicyNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPolicyNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localProductCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "productCode", xmlWriter);


                                          if (localProductCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localProductCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localProposalNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "proposalNo", xmlWriter);


                                          if (localProposalNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localProposalNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localReturnUrlTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "returnUrl", xmlWriter);


                                          if (localReturnUrl==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localReturnUrl);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localRiskCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "riskCode", xmlWriter);


                                          if (localRiskCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRiskCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSendTimeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "sendTime", xmlWriter);


                                          if (localSendTime==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSendTime);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSerialNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "serialNo", xmlWriter);


                                          if (localSerialNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSerialNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localStaffCountTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "staffCount", xmlWriter);


                                          if (localStaffCount==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localStaffCount);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localStartDateTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "startDate", xmlWriter);


                                          if (localStartDate==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localStartDate);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localStrOptionsCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "strOptionsCode", xmlWriter);


                                          if (localStrOptionsCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localStrOptionsCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localStructureTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "structure", xmlWriter);


                                          if (localStructure==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localStructure);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localTotalAmountTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "totalAmount", xmlWriter);


                                          if (localTotalAmount==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localTotalAmount);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localTotalPremiumTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "totalPremium", xmlWriter);


                                          if (localTotalPremium==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localTotalPremium);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localUuidTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "uuid", xmlWriter);


                                          if (localUuid==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localUuid);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAgentCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "agentCode"));

                                         elementList.add(localAgentCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAgentCode));
                                    } if (localAgreementNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "agreementNo"));

                                         elementList.add(localAgreementNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAgreementNo));
                                    } if (localApproverCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "approverCode"));

                                         elementList.add(localApproverCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproverCode));
                                    } if (localArbitBoardCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "arbitBoardCode"));

                                         elementList.add(localArbitBoardCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localArbitBoardCode));
                                    } if (localArbitBoardNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "arbitBoardName"));

                                         elementList.add(localArbitBoardName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localArbitBoardName));
                                    } if (localArgueSolutionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "argueSolution"));

                                         elementList.add(localArgueSolution==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localArgueSolution));
                                    } if (localAsynTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "asyn"));

                                         elementList.add(localAsyn==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAsyn));
                                    } if (localBusinessDetailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "businessDetail"));

                                         elementList.add(localBusinessDetail==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessDetail));
                                    } if (localBusinessIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "businessID"));

                                         elementList.add(localBusinessID==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessID));
                                    } if (localBusinessNatureTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "businessNature"));

                                         elementList.add(localBusinessNature==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessNature));
                                    } if (localBusinessSourceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "businessSource"));

                                         elementList.add(localBusinessSource==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessSource));
                                    } if (localChannelCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "channelCode"));

                                         elementList.add(localChannelCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChannelCode));
                                    } if (localCityCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "cityCode"));

                                         elementList.add(localCityCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCityCode));
                                    } if (localClassCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "classCode"));

                                         elementList.add(localClassCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClassCode));
                                    } if (localComCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "comCode"));

                                         elementList.add(localComCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComCode));
                                    } if (localComIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "comID"));

                                         elementList.add(localComID==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComID));
                                    } if (localDataSourceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "dataSource"));

                                         elementList.add(localDataSource==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataSource));
                                    } if (localDisRateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "disRate"));

                                         elementList.add(localDisRate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDisRate));
                                    } if (localDiscountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "discount"));

                                         elementList.add(localDiscount==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDiscount));
                                    } if (localEndDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "endDate"));

                                         elementList.add(localEndDate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEndDate));
                                    } if (localFromIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "fromID"));

                                         elementList.add(localFromID==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFromID));
                                    } if (localHandler1CodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "handler1Code"));

                                         elementList.add(localHandler1Code==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHandler1Code));
                                    } if (localHandlerCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "handlerCode"));

                                         elementList.add(localHandlerCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHandlerCode));
                                    } if (localInsPeriodTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "insPeriod"));

                                         elementList.add(localInsPeriod==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsPeriod));
                                    } if (localInsureAreaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "insureArea"));

                                         elementList.add(localInsureArea==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsureArea));
                                    } if (localJfeeFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "jfeeFlag"));

                                         elementList.add(localJfeeFlag==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localJfeeFlag));
                                    } if (localJudicalscopeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "judicalscope"));

                                         elementList.add(localJudicalscope==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localJudicalscope));
                                    } if (localMainInsuredCountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "mainInsuredCount"));

                                         elementList.add(localMainInsuredCount==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMainInsuredCount));
                                    } if (localMakeComTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "makeCom"));

                                         elementList.add(localMakeCom==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakeCom));
                                    } if (localModeCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "modeCode"));

                                         elementList.add(localModeCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModeCode));
                                    } if (localModeNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "modeName"));

                                         elementList.add(localModeName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModeName));
                                    } if (localNationFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "nationFlag"));

                                         elementList.add(localNationFlag==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNationFlag));
                                    } if (localOfficeTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "officeType"));

                                         elementList.add(localOfficeType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOfficeType));
                                    } if (localOperatorCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "operatorCode"));

                                         elementList.add(localOperatorCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperatorCode));
                                    } if (localOthFeeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othFee"));

                                         elementList.add(localOthFee==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthFee));
                                    } if (localOthField1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField1"));

                                         elementList.add(localOthField1==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField1));
                                    } if (localOthField2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField2"));

                                         elementList.add(localOthField2==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField2));
                                    } if (localOthField3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField3"));

                                         elementList.add(localOthField3==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField3));
                                    } if (localOthField4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField4"));

                                         elementList.add(localOthField4==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField4));
                                    } if (localOthField5Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField5"));

                                         elementList.add(localOthField5==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField5));
                                    } if (localOthOrderCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othOrderCode"));

                                         elementList.add(localOthOrderCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthOrderCode));
                                    } if (localOthSerialNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othSerialNo"));

                                         elementList.add(localOthSerialNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthSerialNo));
                                    } if (localPolicyNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "policyNo"));

                                         elementList.add(localPolicyNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPolicyNo));
                                    } if (localProductCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "productCode"));

                                         elementList.add(localProductCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProductCode));
                                    } if (localProposalNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "proposalNo"));

                                         elementList.add(localProposalNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProposalNo));
                                    } if (localReturnUrlTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "returnUrl"));

                                         elementList.add(localReturnUrl==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnUrl));
                                    } if (localRiskCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "riskCode"));

                                         elementList.add(localRiskCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRiskCode));
                                    } if (localSendTimeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "sendTime"));

                                         elementList.add(localSendTime==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSendTime));
                                    } if (localSerialNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "serialNo"));

                                         elementList.add(localSerialNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSerialNo));
                                    } if (localStaffCountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "staffCount"));

                                         elementList.add(localStaffCount==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStaffCount));
                                    } if (localStartDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "startDate"));

                                         elementList.add(localStartDate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStartDate));
                                    } if (localStrOptionsCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "strOptionsCode"));

                                         elementList.add(localStrOptionsCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStrOptionsCode));
                                    } if (localStructureTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "structure"));

                                         elementList.add(localStructure==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStructure));
                                    } if (localTotalAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "totalAmount"));

                                         elementList.add(localTotalAmount==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotalAmount));
                                    } if (localTotalPremiumTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "totalPremium"));

                                         elementList.add(localTotalPremium==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotalPremium));
                                    } if (localUuidTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "uuid"));

                                         elementList.add(localUuid==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUuid));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static MainEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            MainEhm object =
                new MainEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"MainEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (MainEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","agentCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAgentCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","agreementNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAgreementNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","approverCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setApproverCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","arbitBoardCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setArbitBoardCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","arbitBoardName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setArbitBoardName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","argueSolution").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setArgueSolution(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","asyn").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAsyn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","businessDetail").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBusinessDetail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","businessID").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBusinessID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","businessNature").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBusinessNature(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","businessSource").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBusinessSource(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","channelCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setChannelCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","cityCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setCityCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","classCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setClassCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","comCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setComCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","comID").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setComID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","dataSource").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDataSource(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","disRate").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDisRate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","discount").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDiscount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","endDate").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setEndDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","fromID").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setFromID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","handler1Code").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setHandler1Code(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","handlerCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setHandlerCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insPeriod").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInsPeriod(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insureArea").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInsureArea(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","jfeeFlag").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setJfeeFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","judicalscope").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setJudicalscope(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","mainInsuredCount").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setMainInsuredCount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","makeCom").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setMakeCom(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","modeCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setModeCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","modeName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setModeName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","nationFlag").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setNationFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","officeType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOfficeType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","operatorCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOperatorCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othFee").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthFee(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField1").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField2").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField3").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField4").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField5").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField5(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othOrderCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthOrderCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othSerialNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthSerialNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","policyNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPolicyNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","productCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setProductCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","proposalNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setProposalNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","returnUrl").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setReturnUrl(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","riskCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRiskCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","sendTime").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSendTime(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","serialNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSerialNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","staffCount").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setStaffCount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","startDate").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setStartDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","strOptionsCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setStrOptionsCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","structure").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setStructure(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","totalAmount").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setTotalAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","totalPremium").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setTotalPremium(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","uuid").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setUuid(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class ProposalSaveRequest
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ProposalSaveRequest
                Namespace URI = http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns2
                */


                        /**
                        * field for ApplicantEhm
                        */


                                    protected ApplicantEhm localApplicantEhm ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApplicantEhmTracker = false ;

                           public boolean isApplicantEhmSpecified(){
                               return localApplicantEhmTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return ApplicantEhm
                           */
                           public  ApplicantEhm getApplicantEhm(){
                               return localApplicantEhm;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ApplicantEhm
                               */
                               public void setApplicantEhm(ApplicantEhm param){
                            localApplicantEhmTracker = true;

                                            this.localApplicantEhm=param;


                               }


                        /**
                        * field for FlightEhm
                        */


                                    protected FlightEhm localFlightEhm ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlightEhmTracker = false ;

                           public boolean isFlightEhmSpecified(){
                               return localFlightEhmTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return FlightEhm
                           */
                           public  FlightEhm getFlightEhm(){
                               return localFlightEhm;
                           }



                            /**
                               * Auto generated setter method
                               * @param param FlightEhm
                               */
                               public void setFlightEhm(FlightEhm param){
                            localFlightEhmTracker = true;

                                            this.localFlightEhm=param;


                               }


                        /**
                        * field for InsuredEhmArray
                        * This was an Array!
                        */


                                    protected InsuredEhm[] localInsuredEhmArray ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInsuredEhmArrayTracker = false ;

                           public boolean isInsuredEhmArraySpecified(){
                               return localInsuredEhmArrayTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return InsuredEhm[]
                           */
                           public  InsuredEhm[] getInsuredEhmArray(){
                               return localInsuredEhmArray;
                           }






                              /**
                               * validate the array for InsuredEhmArray
                               */
                              protected void validateInsuredEhmArray(InsuredEhm[] param){

                              }


                             /**
                              * Auto generated setter method
                              * @param param InsuredEhmArray
                              */
                              public void setInsuredEhmArray(InsuredEhm[] param){

                                   validateInsuredEhmArray(param);

                               localInsuredEhmArrayTracker = true;

                                      this.localInsuredEhmArray=param;
                              }



                             /**
                             * Auto generated add method for the array for convenience
                             * @param param InsuredEhm
                             */
                             public void addInsuredEhmArray(InsuredEhm param){
                                   if (localInsuredEhmArray == null){
                                   localInsuredEhmArray = new InsuredEhm[]{};
                                   }


                                 //update the setting tracker
                                localInsuredEhmArrayTracker = true;


                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localInsuredEhmArray);
                               list.add(param);
                               this.localInsuredEhmArray =
                             (InsuredEhm[])list.toArray(
                            new InsuredEhm[list.size()]);

                             }


                        /**
                        * field for MainEhm
                        */


                                    protected MainEhm localMainEhm ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMainEhmTracker = false ;

                           public boolean isMainEhmSpecified(){
                               return localMainEhmTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return MainEhm
                           */
                           public  MainEhm getMainEhm(){
                               return localMainEhm;
                           }



                            /**
                               * Auto generated setter method
                               * @param param MainEhm
                               */
                               public void setMainEhm(MainEhm param){
                            localMainEhmTracker = true;

                                            this.localMainEhm=param;


                               }


                        /**
                        * field for NameEhmArray
                        * This was an Array!
                        */


                                    protected NameEhm[] localNameEhmArray ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameEhmArrayTracker = false ;

                           public boolean isNameEhmArraySpecified(){
                               return localNameEhmArrayTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return NameEhm[]
                           */
                           public  NameEhm[] getNameEhmArray(){
                               return localNameEhmArray;
                           }






                              /**
                               * validate the array for NameEhmArray
                               */
                              protected void validateNameEhmArray(NameEhm[] param){

                              }


                             /**
                              * Auto generated setter method
                              * @param param NameEhmArray
                              */
                              public void setNameEhmArray(NameEhm[] param){

                                   validateNameEhmArray(param);

                               localNameEhmArrayTracker = true;

                                      this.localNameEhmArray=param;
                              }



                             /**
                             * Auto generated add method for the array for convenience
                             * @param param NameEhm
                             */
                             public void addNameEhmArray(NameEhm param){
                                   if (localNameEhmArray == null){
                                   localNameEhmArray = new NameEhm[]{};
                                   }


                                 //update the setting tracker
                                localNameEhmArrayTracker = true;


                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localNameEhmArray);
                               list.add(param);
                               this.localNameEhmArray =
                             (NameEhm[])list.toArray(
                            new NameEhm[list.size()]);

                             }


                        /**
                        * field for OperteLogEhm
                        */


                                    protected OperteLogEhm localOperteLogEhm ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOperteLogEhmTracker = false ;

                           public boolean isOperteLogEhmSpecified(){
                               return localOperteLogEhmTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return OperteLogEhm
                           */
                           public  OperteLogEhm getOperteLogEhm(){
                               return localOperteLogEhm;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OperteLogEhm
                               */
                               public void setOperteLogEhm(OperteLogEhm param){
                            localOperteLogEhmTracker = true;

                                            this.localOperteLogEhm=param;


                               }


                        /**
                        * field for RequestType
                        */


                                    protected String localRequestType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRequestTypeTracker = false ;

                           public boolean isRequestTypeSpecified(){
                               return localRequestTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRequestType(){
                               return localRequestType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param RequestType
                               */
                               public void setRequestType(String param){
                            localRequestTypeTracker = true;

                                            this.localRequestType=param;


                               }


                        /**
                        * field for SalerInfoEhm
                        */


                                    protected SalerInfoEhm localSalerInfoEhm ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSalerInfoEhmTracker = false ;

                           public boolean isSalerInfoEhmSpecified(){
                               return localSalerInfoEhmTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return SalerInfoEhm
                           */
                           public  SalerInfoEhm getSalerInfoEhm(){
                               return localSalerInfoEhm;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SalerInfoEhm
                               */
                               public void setSalerInfoEhm(SalerInfoEhm param){
                            localSalerInfoEhmTracker = true;

                                            this.localSalerInfoEhm=param;


                               }


                        /**
                        * field for SpecialInfoEhm
                        */


                                    protected SpecialInfoEhm localSpecialInfoEhm ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSpecialInfoEhmTracker = false ;

                           public boolean isSpecialInfoEhmSpecified(){
                               return localSpecialInfoEhmTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return SpecialInfoEhm
                           */
                           public  SpecialInfoEhm getSpecialInfoEhm(){
                               return localSpecialInfoEhm;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SpecialInfoEhm
                               */
                               public void setSpecialInfoEhm(SpecialInfoEhm param){
                            localSpecialInfoEhmTracker = true;

                                            this.localSpecialInfoEhm=param;


                               }


                        /**
                        * field for SystemCode
                        */


                                    protected String localSystemCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSystemCodeTracker = false ;

                           public boolean isSystemCodeSpecified(){
                               return localSystemCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSystemCode(){
                               return localSystemCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SystemCode
                               */
                               public void setSystemCode(String param){
                            localSystemCodeTracker = true;

                                            this.localSystemCode=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ProposalSaveRequest",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ProposalSaveRequest",
                           xmlWriter);
                   }


                   }
                if (localApplicantEhmTracker){
                                    if (localApplicantEhm==null){

                                        writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "applicantEhm", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localApplicantEhm.serialize(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","applicantEhm"),
                                        xmlWriter);
                                    }
                                } if (localFlightEhmTracker){
                                    if (localFlightEhm==null){

                                        writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "flightEhm", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localFlightEhm.serialize(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","flightEhm"),
                                        xmlWriter);
                                    }
                                } if (localInsuredEhmArrayTracker){
                                       if (localInsuredEhmArray!=null){
                                            for (int i = 0;i < localInsuredEhmArray.length;i++){
                                                if (localInsuredEhmArray[i] != null){
                                                 localInsuredEhmArray[i].serialize(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insuredEhmArray"),
                                                           xmlWriter);
                                                } else {

                                                            writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "insuredEhmArray", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();

                                                }

                                            }
                                     } else {

                                                writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "insuredEhmArray", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();

                                    }
                                 } if (localMainEhmTracker){
                                    if (localMainEhm==null){

                                        writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "mainEhm", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localMainEhm.serialize(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","mainEhm"),
                                        xmlWriter);
                                    }
                                } if (localNameEhmArrayTracker){
                                       if (localNameEhmArray!=null){
                                            for (int i = 0;i < localNameEhmArray.length;i++){
                                                if (localNameEhmArray[i] != null){
                                                 localNameEhmArray[i].serialize(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","nameEhmArray"),
                                                           xmlWriter);
                                                } else {

                                                            writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "nameEhmArray", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();

                                                }

                                            }
                                     } else {

                                                writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "nameEhmArray", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();

                                    }
                                 } if (localOperteLogEhmTracker){
                                    if (localOperteLogEhm==null){

                                        writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "operteLogEhm", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localOperteLogEhm.serialize(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","operteLogEhm"),
                                        xmlWriter);
                                    }
                                } if (localRequestTypeTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "requestType", xmlWriter);


                                          if (localRequestType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRequestType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSalerInfoEhmTracker){
                                    if (localSalerInfoEhm==null){

                                        writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "salerInfoEhm", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localSalerInfoEhm.serialize(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","salerInfoEhm"),
                                        xmlWriter);
                                    }
                                } if (localSpecialInfoEhmTracker){
                                    if (localSpecialInfoEhm==null){

                                        writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "specialInfoEhm", xmlWriter);

                                       // write the nil attribute
                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                      xmlWriter.writeEndElement();
                                    }else{
                                     localSpecialInfoEhm.serialize(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","specialInfoEhm"),
                                        xmlWriter);
                                    }
                                } if (localSystemCodeTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "systemCode", xmlWriter);


                                          if (localSystemCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSystemCode);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localApplicantEhmTracker){
                            elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "applicantEhm"));


                                    elementList.add(localApplicantEhm==null?null:
                                    localApplicantEhm);
                                } if (localFlightEhmTracker){
                            elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "flightEhm"));


                                    elementList.add(localFlightEhm==null?null:
                                    localFlightEhm);
                                } if (localInsuredEhmArrayTracker){
                             if (localInsuredEhmArray!=null) {
                                 for (int i = 0;i < localInsuredEhmArray.length;i++){

                                    if (localInsuredEhmArray[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "insuredEhmArray"));
                                         elementList.add(localInsuredEhmArray[i]);
                                    } else {

                                                elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "insuredEhmArray"));
                                                elementList.add(null);

                                    }

                                 }
                             } else {

                                        elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "insuredEhmArray"));
                                        elementList.add(localInsuredEhmArray);

                             }

                        } if (localMainEhmTracker){
                            elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "mainEhm"));


                                    elementList.add(localMainEhm==null?null:
                                    localMainEhm);
                                } if (localNameEhmArrayTracker){
                             if (localNameEhmArray!=null) {
                                 for (int i = 0;i < localNameEhmArray.length;i++){

                                    if (localNameEhmArray[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "nameEhmArray"));
                                         elementList.add(localNameEhmArray[i]);
                                    } else {

                                                elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "nameEhmArray"));
                                                elementList.add(null);

                                    }

                                 }
                             } else {

                                        elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "nameEhmArray"));
                                        elementList.add(localNameEhmArray);

                             }

                        } if (localOperteLogEhmTracker){
                            elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "operteLogEhm"));


                                    elementList.add(localOperteLogEhm==null?null:
                                    localOperteLogEhm);
                                } if (localRequestTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "requestType"));

                                         elementList.add(localRequestType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRequestType));
                                    } if (localSalerInfoEhmTracker){
                            elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "salerInfoEhm"));


                                    elementList.add(localSalerInfoEhm==null?null:
                                    localSalerInfoEhm);
                                } if (localSpecialInfoEhmTracker){
                            elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "specialInfoEhm"));


                                    elementList.add(localSpecialInfoEhm==null?null:
                                    localSpecialInfoEhm);
                                } if (localSystemCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "systemCode"));

                                         elementList.add(localSystemCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSystemCode));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ProposalSaveRequest parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            ProposalSaveRequest object =
                new ProposalSaveRequest();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ProposalSaveRequest".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ProposalSaveRequest) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                        java.util.ArrayList list3 = new java.util.ArrayList();

                        java.util.ArrayList list5 = new java.util.ArrayList();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","applicantEhm").equals(reader.getName())){

                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setApplicantEhm(null);
                                          reader.next();

                                            reader.next();

                                      }else{

                                                object.setApplicantEhm(ApplicantEhm.Factory.parse(reader));

                                        reader.next();
                                    }
                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","flightEhm").equals(reader.getName())){

                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setFlightEhm(null);
                                          reader.next();

                                            reader.next();

                                      }else{

                                                object.setFlightEhm(FlightEhm.Factory.parse(reader));

                                        reader.next();
                                    }
                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insuredEhmArray").equals(reader.getName())){



                                    // Process the array and step past its final element's end.

                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list3.add(null);
                                                              reader.next();
                                                          } else {
                                                        list3.add(InsuredEhm.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone3 = false;
                                                        while(!loopDone3){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone3 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insuredEhmArray").equals(reader.getName())){

                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list3.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list3.add(InsuredEhm.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone3 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array

                                                        object.setInsuredEhmArray((InsuredEhm[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                InsuredEhm.class,
                                                                list3));

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","mainEhm").equals(reader.getName())){

                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setMainEhm(null);
                                          reader.next();

                                            reader.next();

                                      }else{

                                                object.setMainEhm(MainEhm.Factory.parse(reader));

                                        reader.next();
                                    }
                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","nameEhmArray").equals(reader.getName())){



                                    // Process the array and step past its final element's end.

                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list5.add(null);
                                                              reader.next();
                                                          } else {
                                                        list5.add(NameEhm.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone5 = false;
                                                        while(!loopDone5){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone5 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","nameEhmArray").equals(reader.getName())){

                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list5.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list5.add(NameEhm.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone5 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array

                                                        object.setNameEhmArray((NameEhm[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                NameEhm.class,
                                                                list5));

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","operteLogEhm").equals(reader.getName())){

                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setOperteLogEhm(null);
                                          reader.next();

                                            reader.next();

                                      }else{

                                                object.setOperteLogEhm(OperteLogEhm.Factory.parse(reader));

                                        reader.next();
                                    }
                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","requestType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRequestType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","salerInfoEhm").equals(reader.getName())){

                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setSalerInfoEhm(null);
                                          reader.next();

                                            reader.next();

                                      }else{

                                                object.setSalerInfoEhm(SalerInfoEhm.Factory.parse(reader));

                                        reader.next();
                                    }
                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","specialInfoEhm").equals(reader.getName())){

                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                          object.setSpecialInfoEhm(null);
                                          reader.next();

                                            reader.next();

                                      }else{

                                                object.setSpecialInfoEhm(SpecialInfoEhm.Factory.parse(reader));

                                        reader.next();
                                    }
                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","systemCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSystemCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class LimitEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = LimitEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for LimitFee
                        */


                                    protected String localLimitFee ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLimitFeeTracker = false ;

                           public boolean isLimitFeeSpecified(){
                               return localLimitFeeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getLimitFee(){
                               return localLimitFee;
                           }



                            /**
                               * Auto generated setter method
                               * @param param LimitFee
                               */
                               public void setLimitFee(String param){
                            localLimitFeeTracker = true;

                                            this.localLimitFee=param;


                               }


                        /**
                        * field for LimitType
                        */


                                    protected String localLimitType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLimitTypeTracker = false ;

                           public boolean isLimitTypeSpecified(){
                               return localLimitTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getLimitType(){
                               return localLimitType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param LimitType
                               */
                               public void setLimitType(String param){
                            localLimitTypeTracker = true;

                                            this.localLimitType=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":LimitEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "LimitEhm",
                           xmlWriter);
                   }


                   }
                if (localLimitFeeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "limitFee", xmlWriter);


                                          if (localLimitFee==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localLimitFee);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localLimitTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "limitType", xmlWriter);


                                          if (localLimitType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localLimitType);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localLimitFeeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "limitFee"));

                                         elementList.add(localLimitFee==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLimitFee));
                                    } if (localLimitTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "limitType"));

                                         elementList.add(localLimitType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLimitType));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static LimitEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            LimitEhm object =
                new LimitEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"LimitEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (LimitEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","limitFee").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setLimitFee(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","limitType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setLimitType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class ResBatchPolicyDetail
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ResBatchPolicyDetail
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for ErrorMessage
                        */


                                    protected String localErrorMessage ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localErrorMessageTracker = false ;

                           public boolean isErrorMessageSpecified(){
                               return localErrorMessageTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getErrorMessage(){
                               return localErrorMessage;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ErrorMessage
                               */
                               public void setErrorMessage(String param){
                            localErrorMessageTracker = true;

                                            this.localErrorMessage=param;


                               }


                        /**
                        * field for IdentifyNumber
                        */


                                    protected String localIdentifyNumber ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyNumberTracker = false ;

                           public boolean isIdentifyNumberSpecified(){
                               return localIdentifyNumberTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyNumber(){
                               return localIdentifyNumber;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyNumber
                               */
                               public void setIdentifyNumber(String param){
                            localIdentifyNumberTracker = true;

                                            this.localIdentifyNumber=param;


                               }


                        /**
                        * field for IdentifyType
                        */


                                    protected String localIdentifyType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyTypeTracker = false ;

                           public boolean isIdentifyTypeSpecified(){
                               return localIdentifyTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyType(){
                               return localIdentifyType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyType
                               */
                               public void setIdentifyType(String param){
                            localIdentifyTypeTracker = true;

                                            this.localIdentifyType=param;


                               }


                        /**
                        * field for ResponseCode
                        */


                                    protected String localResponseCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResponseCodeTracker = false ;

                           public boolean isResponseCodeSpecified(){
                               return localResponseCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getResponseCode(){
                               return localResponseCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ResponseCode
                               */
                               public void setResponseCode(String param){
                            localResponseCodeTracker = true;

                                            this.localResponseCode=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ResBatchPolicyDetail",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ResBatchPolicyDetail",
                           xmlWriter);
                   }


                   }
                if (localErrorMessageTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "errorMessage", xmlWriter);


                                          if (localErrorMessage==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localErrorMessage);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyNumberTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyNumber", xmlWriter);


                                          if (localIdentifyNumber==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyNumber);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyType", xmlWriter);


                                          if (localIdentifyType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localResponseCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "responseCode", xmlWriter);


                                          if (localResponseCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localResponseCode);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localErrorMessageTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "errorMessage"));

                                         elementList.add(localErrorMessage==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localErrorMessage));
                                    } if (localIdentifyNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyNumber"));

                                         elementList.add(localIdentifyNumber==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyNumber));
                                    } if (localIdentifyTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyType"));

                                         elementList.add(localIdentifyType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyType));
                                    } if (localResponseCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "responseCode"));

                                         elementList.add(localResponseCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResponseCode));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ResBatchPolicyDetail parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            ResBatchPolicyDetail object =
                new ResBatchPolicyDetail();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ResBatchPolicyDetail".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ResBatchPolicyDetail) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","errorMessage").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setErrorMessage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyNumber").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","responseCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setResponseCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class ExtensionMapper{

          public static Object getTypeObject(String namespaceURI,
                                                       String typeName,
                                                       javax.xml.stream.XMLStreamReader reader) throws Exception{


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "FlightEhm".equals(typeName)){

                            return  FlightEhm.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "NameEhm".equals(typeName)){

                            return  NameEhm.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "SpecialInfoEhm".equals(typeName)){

                            return  SpecialInfoEhm.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "ItemKindAddrEhm".equals(typeName)){

                            return  ItemKindAddrEhm.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "ItemKindEhm".equals(typeName)){

                            return  ItemKindEhm.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "MainEhm".equals(typeName)){

                            return  MainEhm.Factory.parse(reader);


                  }


                  if (
                  "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "ProposalSaveRequest".equals(typeName)){

                            return  ProposalSaveRequest.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "LimitEhm".equals(typeName)){

                            return  LimitEhm.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "ResBatchPolicyDetail".equals(typeName)){

                            return  ResBatchPolicyDetail.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "InsuredEhm".equals(typeName)){

                            return  InsuredEhm.Factory.parse(reader);


                  }


                  if (
                  "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "ProposalSaveResponse".equals(typeName)){

                            return  ProposalSaveResponse.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "BenefitEhm".equals(typeName)){

                            return  BenefitEhm.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "ApplicantEhm".equals(typeName)){

                            return  ApplicantEhm.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "OperteLogEhm".equals(typeName)){

                            return  OperteLogEhm.Factory.parse(reader);


                  }


                  if (
                  "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd".equals(namespaceURI) &&
                  "SalerInfoEhm".equals(typeName)){

                            return  SalerInfoEhm.Factory.parse(reader);


                  }


             throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
          }

        }

        public static class InsuredEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = InsuredEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for AddressName
                        */


                                    protected String localAddressName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressNameTracker = false ;

                           public boolean isAddressNameSpecified(){
                               return localAddressNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAddressName(){
                               return localAddressName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AddressName
                               */
                               public void setAddressName(String param){
                            localAddressNameTracker = true;

                                            this.localAddressName=param;


                               }


                        /**
                        * field for Age
                        */


                                    protected String localAge ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAgeTracker = false ;

                           public boolean isAgeSpecified(){
                               return localAgeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAge(){
                               return localAge;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Age
                               */
                               public void setAge(String param){
                            localAgeTracker = true;

                                            this.localAge=param;


                               }


                        /**
                        * field for AppOccupationFlag
                        */


                                    protected String localAppOccupationFlag ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAppOccupationFlagTracker = false ;

                           public boolean isAppOccupationFlagSpecified(){
                               return localAppOccupationFlagTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAppOccupationFlag(){
                               return localAppOccupationFlag;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AppOccupationFlag
                               */
                               public void setAppOccupationFlag(String param){
                            localAppOccupationFlagTracker = true;

                                            this.localAppOccupationFlag=param;


                               }


                        /**
                        * field for ApplyNum
                        */


                                    protected String localApplyNum ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApplyNumTracker = false ;

                           public boolean isApplyNumSpecified(){
                               return localApplyNumTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getApplyNum(){
                               return localApplyNum;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ApplyNum
                               */
                               public void setApplyNum(String param){
                            localApplyNumTracker = true;

                                            this.localApplyNum=param;


                               }


                        /**
                        * field for BenefitEhmArray
                        * This was an Array!
                        */


                                    protected BenefitEhm[] localBenefitEhmArray ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBenefitEhmArrayTracker = false ;

                           public boolean isBenefitEhmArraySpecified(){
                               return localBenefitEhmArrayTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return BenefitEhm[]
                           */
                           public  BenefitEhm[] getBenefitEhmArray(){
                               return localBenefitEhmArray;
                           }






                              /**
                               * validate the array for BenefitEhmArray
                               */
                              protected void validateBenefitEhmArray(BenefitEhm[] param){

                              }


                             /**
                              * Auto generated setter method
                              * @param param BenefitEhmArray
                              */
                              public void setBenefitEhmArray(BenefitEhm[] param){

                                   validateBenefitEhmArray(param);

                               localBenefitEhmArrayTracker = true;

                                      this.localBenefitEhmArray=param;
                              }



                             /**
                             * Auto generated add method for the array for convenience
                             * @param param BenefitEhm
                             */
                             public void addBenefitEhmArray(BenefitEhm param){
                                   if (localBenefitEhmArray == null){
                                   localBenefitEhmArray = new BenefitEhm[]{};
                                   }


                                 //update the setting tracker
                                localBenefitEhmArrayTracker = true;


                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localBenefitEhmArray);
                               list.add(param);
                               this.localBenefitEhmArray =
                             (BenefitEhm[])list.toArray(
                            new BenefitEhm[list.size()]);

                             }


                        /**
                        * field for Birthday
                        */


                                    protected String localBirthday ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBirthdayTracker = false ;

                           public boolean isBirthdaySpecified(){
                               return localBirthdayTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBirthday(){
                               return localBirthday;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Birthday
                               */
                               public void setBirthday(String param){
                            localBirthdayTracker = true;

                                            this.localBirthday=param;


                               }


                        /**
                        * field for DriveNo
                        */


                                    protected String localDriveNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDriveNoTracker = false ;

                           public boolean isDriveNoSpecified(){
                               return localDriveNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDriveNo(){
                               return localDriveNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param DriveNo
                               */
                               public void setDriveNo(String param){
                            localDriveNoTracker = true;

                                            this.localDriveNo=param;


                               }


                        /**
                        * field for Email
                        */


                                    protected String localEmail ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmailTracker = false ;

                           public boolean isEmailSpecified(){
                               return localEmailTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getEmail(){
                               return localEmail;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Email
                               */
                               public void setEmail(String param){
                            localEmailTracker = true;

                                            this.localEmail=param;


                               }


                        /**
                        * field for IdentifyNumber
                        */


                                    protected String localIdentifyNumber ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyNumberTracker = false ;

                           public boolean isIdentifyNumberSpecified(){
                               return localIdentifyNumberTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyNumber(){
                               return localIdentifyNumber;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyNumber
                               */
                               public void setIdentifyNumber(String param){
                            localIdentifyNumberTracker = true;

                                            this.localIdentifyNumber=param;


                               }


                        /**
                        * field for IdentifyType
                        */


                                    protected String localIdentifyType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyTypeTracker = false ;

                           public boolean isIdentifyTypeSpecified(){
                               return localIdentifyTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyType(){
                               return localIdentifyType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyType
                               */
                               public void setIdentifyType(String param){
                            localIdentifyTypeTracker = true;

                                            this.localIdentifyType=param;


                               }


                        /**
                        * field for InValidMessage
                        */


                                    protected String localInValidMessage ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInValidMessageTracker = false ;

                           public boolean isInValidMessageSpecified(){
                               return localInValidMessageTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInValidMessage(){
                               return localInValidMessage;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InValidMessage
                               */
                               public void setInValidMessage(String param){
                            localInValidMessageTracker = true;

                                            this.localInValidMessage=param;


                               }


                        /**
                        * field for InsuredCode
                        */


                                    protected String localInsuredCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInsuredCodeTracker = false ;

                           public boolean isInsuredCodeSpecified(){
                               return localInsuredCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInsuredCode(){
                               return localInsuredCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InsuredCode
                               */
                               public void setInsuredCode(String param){
                            localInsuredCodeTracker = true;

                                            this.localInsuredCode=param;


                               }


                        /**
                        * field for InsuredName
                        */


                                    protected String localInsuredName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInsuredNameTracker = false ;

                           public boolean isInsuredNameSpecified(){
                               return localInsuredNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInsuredName(){
                               return localInsuredName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InsuredName
                               */
                               public void setInsuredName(String param){
                            localInsuredNameTracker = true;

                                            this.localInsuredName=param;


                               }


                        /**
                        * field for InsuredNature
                        */


                                    protected String localInsuredNature ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInsuredNatureTracker = false ;

                           public boolean isInsuredNatureSpecified(){
                               return localInsuredNatureTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInsuredNature(){
                               return localInsuredNature;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InsuredNature
                               */
                               public void setInsuredNature(String param){
                            localInsuredNatureTracker = true;

                                            this.localInsuredNature=param;


                               }


                        /**
                        * field for ItemKindAddrEhmArray
                        * This was an Array!
                        */


                                    protected ItemKindAddrEhm[] localItemKindAddrEhmArray ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localItemKindAddrEhmArrayTracker = false ;

                           public boolean isItemKindAddrEhmArraySpecified(){
                               return localItemKindAddrEhmArrayTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return ItemKindAddrEhm[]
                           */
                           public  ItemKindAddrEhm[] getItemKindAddrEhmArray(){
                               return localItemKindAddrEhmArray;
                           }






                              /**
                               * validate the array for ItemKindAddrEhmArray
                               */
                              protected void validateItemKindAddrEhmArray(ItemKindAddrEhm[] param){

                              }


                             /**
                              * Auto generated setter method
                              * @param param ItemKindAddrEhmArray
                              */
                              public void setItemKindAddrEhmArray(ItemKindAddrEhm[] param){

                                   validateItemKindAddrEhmArray(param);

                               localItemKindAddrEhmArrayTracker = true;

                                      this.localItemKindAddrEhmArray=param;
                              }



                             /**
                             * Auto generated add method for the array for convenience
                             * @param param ItemKindAddrEhm
                             */
                             public void addItemKindAddrEhmArray(ItemKindAddrEhm param){
                                   if (localItemKindAddrEhmArray == null){
                                   localItemKindAddrEhmArray = new ItemKindAddrEhm[]{};
                                   }


                                 //update the setting tracker
                                localItemKindAddrEhmArrayTracker = true;


                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localItemKindAddrEhmArray);
                               list.add(param);
                               this.localItemKindAddrEhmArray =
                             (ItemKindAddrEhm[])list.toArray(
                            new ItemKindAddrEhm[list.size()]);

                             }


                        /**
                        * field for ItemKindEhmArray
                        * This was an Array!
                        */


                                    protected ItemKindEhm[] localItemKindEhmArray ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localItemKindEhmArrayTracker = false ;

                           public boolean isItemKindEhmArraySpecified(){
                               return localItemKindEhmArrayTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return ItemKindEhm[]
                           */
                           public  ItemKindEhm[] getItemKindEhmArray(){
                               return localItemKindEhmArray;
                           }






                              /**
                               * validate the array for ItemKindEhmArray
                               */
                              protected void validateItemKindEhmArray(ItemKindEhm[] param){

                              }


                             /**
                              * Auto generated setter method
                              * @param param ItemKindEhmArray
                              */
                              public void setItemKindEhmArray(ItemKindEhm[] param){

                                   validateItemKindEhmArray(param);

                               localItemKindEhmArrayTracker = true;

                                      this.localItemKindEhmArray=param;
                              }



                             /**
                             * Auto generated add method for the array for convenience
                             * @param param ItemKindEhm
                             */
                             public void addItemKindEhmArray(ItemKindEhm param){
                                   if (localItemKindEhmArray == null){
                                   localItemKindEhmArray = new ItemKindEhm[]{};
                                   }


                                 //update the setting tracker
                                localItemKindEhmArrayTracker = true;


                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localItemKindEhmArray);
                               list.add(param);
                               this.localItemKindEhmArray =
                             (ItemKindEhm[])list.toArray(
                            new ItemKindEhm[list.size()]);

                             }


                        /**
                        * field for LinkerName
                        */


                                    protected String localLinkerName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLinkerNameTracker = false ;

                           public boolean isLinkerNameSpecified(){
                               return localLinkerNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getLinkerName(){
                               return localLinkerName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param LinkerName
                               */
                               public void setLinkerName(String param){
                            localLinkerNameTracker = true;

                                            this.localLinkerName=param;


                               }


                        /**
                        * field for Mobile
                        */


                                    protected String localMobile ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMobileTracker = false ;

                           public boolean isMobileSpecified(){
                               return localMobileTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getMobile(){
                               return localMobile;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Mobile
                               */
                               public void setMobile(String param){
                            localMobileTracker = true;

                                            this.localMobile=param;


                               }


                        /**
                        * field for OccupationCode1
                        */


                                    protected String localOccupationCode1 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOccupationCode1Tracker = false ;

                           public boolean isOccupationCode1Specified(){
                               return localOccupationCode1Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOccupationCode1(){
                               return localOccupationCode1;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OccupationCode1
                               */
                               public void setOccupationCode1(String param){
                            localOccupationCode1Tracker = true;

                                            this.localOccupationCode1=param;


                               }


                        /**
                        * field for OccupationCode2
                        */


                                    protected String localOccupationCode2 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOccupationCode2Tracker = false ;

                           public boolean isOccupationCode2Specified(){
                               return localOccupationCode2Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOccupationCode2(){
                               return localOccupationCode2;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OccupationCode2
                               */
                               public void setOccupationCode2(String param){
                            localOccupationCode2Tracker = true;

                                            this.localOccupationCode2=param;


                               }


                        /**
                        * field for OccupationCode3
                        */


                                    protected String localOccupationCode3 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOccupationCode3Tracker = false ;

                           public boolean isOccupationCode3Specified(){
                               return localOccupationCode3Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOccupationCode3(){
                               return localOccupationCode3;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OccupationCode3
                               */
                               public void setOccupationCode3(String param){
                            localOccupationCode3Tracker = true;

                                            this.localOccupationCode3=param;


                               }


                        /**
                        * field for OthField1
                        */


                                    protected String localOthField1 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField1Tracker = false ;

                           public boolean isOthField1Specified(){
                               return localOthField1Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField1(){
                               return localOthField1;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField1
                               */
                               public void setOthField1(String param){
                            localOthField1Tracker = true;

                                            this.localOthField1=param;


                               }


                        /**
                        * field for OthField2
                        */


                                    protected String localOthField2 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField2Tracker = false ;

                           public boolean isOthField2Specified(){
                               return localOthField2Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField2(){
                               return localOthField2;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField2
                               */
                               public void setOthField2(String param){
                            localOthField2Tracker = true;

                                            this.localOthField2=param;


                               }


                        /**
                        * field for OthField3
                        */


                                    protected String localOthField3 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField3Tracker = false ;

                           public boolean isOthField3Specified(){
                               return localOthField3Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField3(){
                               return localOthField3;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField3
                               */
                               public void setOthField3(String param){
                            localOthField3Tracker = true;

                                            this.localOthField3=param;


                               }


                        /**
                        * field for OthField4
                        */


                                    protected String localOthField4 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField4Tracker = false ;

                           public boolean isOthField4Specified(){
                               return localOthField4Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField4(){
                               return localOthField4;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField4
                               */
                               public void setOthField4(String param){
                            localOthField4Tracker = true;

                                            this.localOthField4=param;


                               }


                        /**
                        * field for OthField5
                        */


                                    protected String localOthField5 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField5Tracker = false ;

                           public boolean isOthField5Specified(){
                               return localOthField5Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField5(){
                               return localOthField5;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField5
                               */
                               public void setOthField5(String param){
                            localOthField5Tracker = true;

                                            this.localOthField5=param;


                               }


                        /**
                        * field for Phone
                        */


                                    protected String localPhone ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPhoneTracker = false ;

                           public boolean isPhoneSpecified(){
                               return localPhoneTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPhone(){
                               return localPhone;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Phone
                               */
                               public void setPhone(String param){
                            localPhoneTracker = true;

                                            this.localPhone=param;


                               }


                        /**
                        * field for PostAddress
                        */


                                    protected String localPostAddress ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPostAddressTracker = false ;

                           public boolean isPostAddressSpecified(){
                               return localPostAddressTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPostAddress(){
                               return localPostAddress;
                           }



                            /**
                               * Auto generated setter method
                               * @param param PostAddress
                               */
                               public void setPostAddress(String param){
                            localPostAddressTracker = true;

                                            this.localPostAddress=param;


                               }


                        /**
                        * field for PostCode
                        */


                                    protected String localPostCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPostCodeTracker = false ;

                           public boolean isPostCodeSpecified(){
                               return localPostCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPostCode(){
                               return localPostCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param PostCode
                               */
                               public void setPostCode(String param){
                            localPostCodeTracker = true;

                                            this.localPostCode=param;


                               }


                        /**
                        * field for Relation
                        */


                                    protected String localRelation ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationTracker = false ;

                           public boolean isRelationSpecified(){
                               return localRelationTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRelation(){
                               return localRelation;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Relation
                               */
                               public void setRelation(String param){
                            localRelationTracker = true;

                                            this.localRelation=param;


                               }


                        /**
                        * field for SerialNo
                        */


                                    protected int localSerialNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSerialNoTracker = false ;

                           public boolean isSerialNoSpecified(){
                               return localSerialNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return int
                           */
                           public  int getSerialNo(){
                               return localSerialNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SerialNo
                               */
                               public void setSerialNo(int param){

                                       // setting primitive attribute tracker to true
                                       localSerialNoTracker =
                                       param != Integer.MIN_VALUE;

                                            this.localSerialNo=param;


                               }


                        /**
                        * field for Sex
                        */


                                    protected String localSex ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSexTracker = false ;

                           public boolean isSexSpecified(){
                               return localSexTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSex(){
                               return localSex;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Sex
                               */
                               public void setSex(String param){
                            localSexTracker = true;

                                            this.localSex=param;


                               }


                        /**
                        * field for Valid
                        */


                                    protected boolean localValid ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localValidTracker = false ;

                           public boolean isValidSpecified(){
                               return localValidTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getValid(){
                               return localValid;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Valid
                               */
                               public void setValid(boolean param){

                                       // setting primitive attribute tracker to true
                                       localValidTracker =
                                       true;

                                            this.localValid=param;


                               }


                        /**
                        * field for WorkUnit
                        */


                                    protected String localWorkUnit ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWorkUnitTracker = false ;

                           public boolean isWorkUnitSpecified(){
                               return localWorkUnitTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getWorkUnit(){
                               return localWorkUnit;
                           }



                            /**
                               * Auto generated setter method
                               * @param param WorkUnit
                               */
                               public void setWorkUnit(String param){
                            localWorkUnitTracker = true;

                                            this.localWorkUnit=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":InsuredEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "InsuredEhm",
                           xmlWriter);
                   }


                   }
                if (localAddressNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "addressName", xmlWriter);


                                          if (localAddressName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAddressName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAgeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "age", xmlWriter);


                                          if (localAge==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAge);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAppOccupationFlagTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "appOccupationFlag", xmlWriter);


                                          if (localAppOccupationFlag==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAppOccupationFlag);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localApplyNumTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "applyNum", xmlWriter);


                                          if (localApplyNum==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localApplyNum);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBenefitEhmArrayTracker){
                                       if (localBenefitEhmArray!=null){
                                            for (int i = 0;i < localBenefitEhmArray.length;i++){
                                                if (localBenefitEhmArray[i] != null){
                                                 localBenefitEhmArray[i].serialize(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","benefitEhmArray"),
                                                           xmlWriter);
                                                } else {

                                                            writeStartElement(null, "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "benefitEhmArray", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();

                                                }

                                            }
                                     } else {

                                                writeStartElement(null, "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "benefitEhmArray", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();

                                    }
                                 } if (localBirthdayTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "birthday", xmlWriter);


                                          if (localBirthday==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBirthday);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDriveNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "driveNo", xmlWriter);


                                          if (localDriveNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDriveNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localEmailTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "email", xmlWriter);


                                          if (localEmail==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localEmail);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyNumberTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyNumber", xmlWriter);


                                          if (localIdentifyNumber==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyNumber);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyType", xmlWriter);


                                          if (localIdentifyType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInValidMessageTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "inValidMessage", xmlWriter);


                                          if (localInValidMessage==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInValidMessage);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInsuredCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "insuredCode", xmlWriter);


                                          if (localInsuredCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInsuredCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInsuredNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "insuredName", xmlWriter);


                                          if (localInsuredName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInsuredName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInsuredNatureTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "insuredNature", xmlWriter);


                                          if (localInsuredNature==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInsuredNature);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localItemKindAddrEhmArrayTracker){
                                       if (localItemKindAddrEhmArray!=null){
                                            for (int i = 0;i < localItemKindAddrEhmArray.length;i++){
                                                if (localItemKindAddrEhmArray[i] != null){
                                                 localItemKindAddrEhmArray[i].serialize(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemKindAddrEhmArray"),
                                                           xmlWriter);
                                                } else {

                                                            writeStartElement(null, "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "itemKindAddrEhmArray", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();

                                                }

                                            }
                                     } else {

                                                writeStartElement(null, "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "itemKindAddrEhmArray", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();

                                    }
                                 } if (localItemKindEhmArrayTracker){
                                       if (localItemKindEhmArray!=null){
                                            for (int i = 0;i < localItemKindEhmArray.length;i++){
                                                if (localItemKindEhmArray[i] != null){
                                                 localItemKindEhmArray[i].serialize(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemKindEhmArray"),
                                                           xmlWriter);
                                                } else {

                                                            writeStartElement(null, "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "itemKindEhmArray", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();

                                                }

                                            }
                                     } else {

                                                writeStartElement(null, "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "itemKindEhmArray", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();

                                    }
                                 } if (localLinkerNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "linkerName", xmlWriter);


                                          if (localLinkerName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localLinkerName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localMobileTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "mobile", xmlWriter);


                                          if (localMobile==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localMobile);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOccupationCode1Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "occupationCode1", xmlWriter);


                                          if (localOccupationCode1==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOccupationCode1);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOccupationCode2Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "occupationCode2", xmlWriter);


                                          if (localOccupationCode2==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOccupationCode2);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOccupationCode3Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "occupationCode3", xmlWriter);


                                          if (localOccupationCode3==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOccupationCode3);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField1Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField1", xmlWriter);


                                          if (localOthField1==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField1);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField2Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField2", xmlWriter);


                                          if (localOthField2==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField2);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField3Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField3", xmlWriter);


                                          if (localOthField3==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField3);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField4Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField4", xmlWriter);


                                          if (localOthField4==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField4);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField5Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField5", xmlWriter);


                                          if (localOthField5==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField5);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPhoneTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "phone", xmlWriter);


                                          if (localPhone==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPhone);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPostAddressTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "postAddress", xmlWriter);


                                          if (localPostAddress==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPostAddress);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPostCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "postCode", xmlWriter);


                                          if (localPostCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPostCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localRelationTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "relation", xmlWriter);


                                          if (localRelation==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRelation);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSerialNoTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "serialNo", xmlWriter);

                                               if (localSerialNo== Integer.MIN_VALUE) {

                                                         throw new org.apache.axis2.databinding.ADBException("serialNo cannot be null!!");

                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSerialNo));
                                               }

                                   xmlWriter.writeEndElement();
                             } if (localSexTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "sex", xmlWriter);


                                          if (localSex==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSex);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localValidTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "valid", xmlWriter);

                                               if (false) {

                                                         throw new org.apache.axis2.databinding.ADBException("valid cannot be null!!");

                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValid));
                                               }

                                   xmlWriter.writeEndElement();
                             } if (localWorkUnitTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "workUnit", xmlWriter);


                                          if (localWorkUnit==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localWorkUnit);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddressNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "addressName"));

                                         elementList.add(localAddressName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressName));
                                    } if (localAgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "age"));

                                         elementList.add(localAge==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAge));
                                    } if (localAppOccupationFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "appOccupationFlag"));

                                         elementList.add(localAppOccupationFlag==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppOccupationFlag));
                                    } if (localApplyNumTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "applyNum"));

                                         elementList.add(localApplyNum==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApplyNum));
                                    } if (localBenefitEhmArrayTracker){
                             if (localBenefitEhmArray!=null) {
                                 for (int i = 0;i < localBenefitEhmArray.length;i++){

                                    if (localBenefitEhmArray[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "benefitEhmArray"));
                                         elementList.add(localBenefitEhmArray[i]);
                                    } else {

                                                elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "benefitEhmArray"));
                                                elementList.add(null);

                                    }

                                 }
                             } else {

                                        elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "benefitEhmArray"));
                                        elementList.add(localBenefitEhmArray);

                             }

                        } if (localBirthdayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "birthday"));

                                         elementList.add(localBirthday==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBirthday));
                                    } if (localDriveNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "driveNo"));

                                         elementList.add(localDriveNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDriveNo));
                                    } if (localEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "email"));

                                         elementList.add(localEmail==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmail));
                                    } if (localIdentifyNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyNumber"));

                                         elementList.add(localIdentifyNumber==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyNumber));
                                    } if (localIdentifyTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyType"));

                                         elementList.add(localIdentifyType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyType));
                                    } if (localInValidMessageTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "inValidMessage"));

                                         elementList.add(localInValidMessage==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInValidMessage));
                                    } if (localInsuredCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "insuredCode"));

                                         elementList.add(localInsuredCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuredCode));
                                    } if (localInsuredNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "insuredName"));

                                         elementList.add(localInsuredName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuredName));
                                    } if (localInsuredNatureTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "insuredNature"));

                                         elementList.add(localInsuredNature==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuredNature));
                                    } if (localItemKindAddrEhmArrayTracker){
                             if (localItemKindAddrEhmArray!=null) {
                                 for (int i = 0;i < localItemKindAddrEhmArray.length;i++){

                                    if (localItemKindAddrEhmArray[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "itemKindAddrEhmArray"));
                                         elementList.add(localItemKindAddrEhmArray[i]);
                                    } else {

                                                elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "itemKindAddrEhmArray"));
                                                elementList.add(null);

                                    }

                                 }
                             } else {

                                        elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "itemKindAddrEhmArray"));
                                        elementList.add(localItemKindAddrEhmArray);

                             }

                        } if (localItemKindEhmArrayTracker){
                             if (localItemKindEhmArray!=null) {
                                 for (int i = 0;i < localItemKindEhmArray.length;i++){

                                    if (localItemKindEhmArray[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "itemKindEhmArray"));
                                         elementList.add(localItemKindEhmArray[i]);
                                    } else {

                                                elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "itemKindEhmArray"));
                                                elementList.add(null);

                                    }

                                 }
                             } else {

                                        elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "itemKindEhmArray"));
                                        elementList.add(localItemKindEhmArray);

                             }

                        } if (localLinkerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "linkerName"));

                                         elementList.add(localLinkerName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLinkerName));
                                    } if (localMobileTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "mobile"));

                                         elementList.add(localMobile==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMobile));
                                    } if (localOccupationCode1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "occupationCode1"));

                                         elementList.add(localOccupationCode1==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOccupationCode1));
                                    } if (localOccupationCode2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "occupationCode2"));

                                         elementList.add(localOccupationCode2==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOccupationCode2));
                                    } if (localOccupationCode3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "occupationCode3"));

                                         elementList.add(localOccupationCode3==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOccupationCode3));
                                    } if (localOthField1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField1"));

                                         elementList.add(localOthField1==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField1));
                                    } if (localOthField2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField2"));

                                         elementList.add(localOthField2==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField2));
                                    } if (localOthField3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField3"));

                                         elementList.add(localOthField3==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField3));
                                    } if (localOthField4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField4"));

                                         elementList.add(localOthField4==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField4));
                                    } if (localOthField5Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField5"));

                                         elementList.add(localOthField5==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField5));
                                    } if (localPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "phone"));

                                         elementList.add(localPhone==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPhone));
                                    } if (localPostAddressTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "postAddress"));

                                         elementList.add(localPostAddress==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPostAddress));
                                    } if (localPostCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "postCode"));

                                         elementList.add(localPostCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPostCode));
                                    } if (localRelationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "relation"));

                                         elementList.add(localRelation==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelation));
                                    } if (localSerialNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "serialNo"));

                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSerialNo));
                            } if (localSexTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "sex"));

                                         elementList.add(localSex==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSex));
                                    } if (localValidTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "valid"));

                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localValid));
                            } if (localWorkUnitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "workUnit"));

                                         elementList.add(localWorkUnit==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWorkUnit));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static InsuredEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            InsuredEhm object =
                new InsuredEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"InsuredEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (InsuredEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                        java.util.ArrayList list5 = new java.util.ArrayList();

                        java.util.ArrayList list15 = new java.util.ArrayList();

                        java.util.ArrayList list16 = new java.util.ArrayList();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","addressName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAddressName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","age").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","appOccupationFlag").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAppOccupationFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","applyNum").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setApplyNum(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","benefitEhmArray").equals(reader.getName())){



                                    // Process the array and step past its final element's end.

                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list5.add(null);
                                                              reader.next();
                                                          } else {
                                                        list5.add(BenefitEhm.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone5 = false;
                                                        while(!loopDone5){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone5 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","benefitEhmArray").equals(reader.getName())){

                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list5.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list5.add(BenefitEhm.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone5 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array

                                                        object.setBenefitEhmArray((BenefitEhm[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                BenefitEhm.class,
                                                                list5));

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","birthday").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBirthday(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","driveNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDriveNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","email").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyNumber").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","inValidMessage").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInValidMessage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insuredCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInsuredCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insuredName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInsuredName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insuredNature").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInsuredNature(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemKindAddrEhmArray").equals(reader.getName())){



                                    // Process the array and step past its final element's end.

                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list15.add(null);
                                                              reader.next();
                                                          } else {
                                                        list15.add(ItemKindAddrEhm.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone15 = false;
                                                        while(!loopDone15){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone15 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemKindAddrEhmArray").equals(reader.getName())){

                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list15.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list15.add(ItemKindAddrEhm.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone15 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array

                                                        object.setItemKindAddrEhmArray((ItemKindAddrEhm[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                ItemKindAddrEhm.class,
                                                                list15));

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemKindEhmArray").equals(reader.getName())){



                                    // Process the array and step past its final element's end.

                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list16.add(null);
                                                              reader.next();
                                                          } else {
                                                        list16.add(ItemKindEhm.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone16 = false;
                                                        while(!loopDone16){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone16 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","itemKindEhmArray").equals(reader.getName())){

                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list16.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list16.add(ItemKindEhm.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone16 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array

                                                        object.setItemKindEhmArray((ItemKindEhm[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                ItemKindEhm.class,
                                                                list16));

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","linkerName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setLinkerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","mobile").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","occupationCode1").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOccupationCode1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","occupationCode2").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOccupationCode2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","occupationCode3").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOccupationCode3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField1").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField2").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField3").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField4").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField5").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField5(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","phone").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","postAddress").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPostAddress(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","postCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPostCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","relation").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRelation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","serialNo").equals(reader.getName())){

                                    String content = reader.getElementText();

                                              object.setSerialNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                               object.setSerialNo(Integer.MIN_VALUE);

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","sex").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSex(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","valid").equals(reader.getName())){

                                    String content = reader.getElementText();

                                              object.setValid(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","workUnit").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setWorkUnit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class BenefitEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = BenefitEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for BenefitAmount
                        */


                                    protected String localBenefitAmount ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBenefitAmountTracker = false ;

                           public boolean isBenefitAmountSpecified(){
                               return localBenefitAmountTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBenefitAmount(){
                               return localBenefitAmount;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BenefitAmount
                               */
                               public void setBenefitAmount(String param){
                            localBenefitAmountTracker = true;

                                            this.localBenefitAmount=param;


                               }


                        /**
                        * field for BenefitFlag
                        */


                                    protected String localBenefitFlag ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBenefitFlagTracker = false ;

                           public boolean isBenefitFlagSpecified(){
                               return localBenefitFlagTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBenefitFlag(){
                               return localBenefitFlag;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BenefitFlag
                               */
                               public void setBenefitFlag(String param){
                            localBenefitFlagTracker = true;

                                            this.localBenefitFlag=param;


                               }


                        /**
                        * field for BenefitName
                        */


                                    protected String localBenefitName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBenefitNameTracker = false ;

                           public boolean isBenefitNameSpecified(){
                               return localBenefitNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBenefitName(){
                               return localBenefitName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BenefitName
                               */
                               public void setBenefitName(String param){
                            localBenefitNameTracker = true;

                                            this.localBenefitName=param;


                               }


                        /**
                        * field for BenefitRate
                        */


                                    protected String localBenefitRate ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBenefitRateTracker = false ;

                           public boolean isBenefitRateSpecified(){
                               return localBenefitRateTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBenefitRate(){
                               return localBenefitRate;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BenefitRate
                               */
                               public void setBenefitRate(String param){
                            localBenefitRateTracker = true;

                                            this.localBenefitRate=param;


                               }


                        /**
                        * field for IdentifyNumber
                        */


                                    protected String localIdentifyNumber ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyNumberTracker = false ;

                           public boolean isIdentifyNumberSpecified(){
                               return localIdentifyNumberTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyNumber(){
                               return localIdentifyNumber;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyNumber
                               */
                               public void setIdentifyNumber(String param){
                            localIdentifyNumberTracker = true;

                                            this.localIdentifyNumber=param;


                               }


                        /**
                        * field for IdentifyType
                        */


                                    protected String localIdentifyType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyTypeTracker = false ;

                           public boolean isIdentifyTypeSpecified(){
                               return localIdentifyTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyType(){
                               return localIdentifyType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyType
                               */
                               public void setIdentifyType(String param){
                            localIdentifyTypeTracker = true;

                                            this.localIdentifyType=param;


                               }


                        /**
                        * field for InsuredNature
                        */


                                    protected String localInsuredNature ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInsuredNatureTracker = false ;

                           public boolean isInsuredNatureSpecified(){
                               return localInsuredNatureTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInsuredNature(){
                               return localInsuredNature;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InsuredNature
                               */
                               public void setInsuredNature(String param){
                            localInsuredNatureTracker = true;

                                            this.localInsuredNature=param;


                               }


                        /**
                        * field for Relation
                        */


                                    protected String localRelation ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationTracker = false ;

                           public boolean isRelationSpecified(){
                               return localRelationTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRelation(){
                               return localRelation;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Relation
                               */
                               public void setRelation(String param){
                            localRelationTracker = true;

                                            this.localRelation=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":BenefitEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "BenefitEhm",
                           xmlWriter);
                   }


                   }
                if (localBenefitAmountTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "benefitAmount", xmlWriter);


                                          if (localBenefitAmount==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBenefitAmount);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBenefitFlagTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "benefitFlag", xmlWriter);


                                          if (localBenefitFlag==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBenefitFlag);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBenefitNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "benefitName", xmlWriter);


                                          if (localBenefitName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBenefitName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBenefitRateTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "benefitRate", xmlWriter);


                                          if (localBenefitRate==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBenefitRate);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyNumberTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyNumber", xmlWriter);


                                          if (localIdentifyNumber==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyNumber);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyType", xmlWriter);


                                          if (localIdentifyType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInsuredNatureTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "insuredNature", xmlWriter);


                                          if (localInsuredNature==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInsuredNature);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localRelationTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "relation", xmlWriter);


                                          if (localRelation==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRelation);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBenefitAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "benefitAmount"));

                                         elementList.add(localBenefitAmount==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBenefitAmount));
                                    } if (localBenefitFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "benefitFlag"));

                                         elementList.add(localBenefitFlag==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBenefitFlag));
                                    } if (localBenefitNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "benefitName"));

                                         elementList.add(localBenefitName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBenefitName));
                                    } if (localBenefitRateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "benefitRate"));

                                         elementList.add(localBenefitRate==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBenefitRate));
                                    } if (localIdentifyNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyNumber"));

                                         elementList.add(localIdentifyNumber==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyNumber));
                                    } if (localIdentifyTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyType"));

                                         elementList.add(localIdentifyType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyType));
                                    } if (localInsuredNatureTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "insuredNature"));

                                         elementList.add(localInsuredNature==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuredNature));
                                    } if (localRelationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "relation"));

                                         elementList.add(localRelation==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelation));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static BenefitEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            BenefitEhm object =
                new BenefitEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"BenefitEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (BenefitEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","benefitAmount").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBenefitAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","benefitFlag").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBenefitFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","benefitName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBenefitName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","benefitRate").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBenefitRate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyNumber").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insuredNature").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInsuredNature(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","relation").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRelation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class ProposalSaveResponse
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ProposalSaveResponse
                Namespace URI = http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns2
                */


                        /**
                        * field for ComID
                        */


                                    protected String localComID ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComIDTracker = false ;

                           public boolean isComIDSpecified(){
                               return localComIDTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getComID(){
                               return localComID;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ComID
                               */
                               public void setComID(String param){
                            localComIDTracker = true;

                                            this.localComID=param;


                               }


                        /**
                        * field for ErrorMessage
                        */


                                    protected String localErrorMessage ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localErrorMessageTracker = false ;

                           public boolean isErrorMessageSpecified(){
                               return localErrorMessageTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getErrorMessage(){
                               return localErrorMessage;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ErrorMessage
                               */
                               public void setErrorMessage(String param){
                            localErrorMessageTracker = true;

                                            this.localErrorMessage=param;


                               }


                        /**
                        * field for FromID
                        */


                                    protected String localFromID ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFromIDTracker = false ;

                           public boolean isFromIDSpecified(){
                               return localFromIDTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getFromID(){
                               return localFromID;
                           }



                            /**
                               * Auto generated setter method
                               * @param param FromID
                               */
                               public void setFromID(String param){
                            localFromIDTracker = true;

                                            this.localFromID=param;


                               }


                        /**
                        * field for MainInsuredCount
                        */


                                    protected String localMainInsuredCount ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMainInsuredCountTracker = false ;

                           public boolean isMainInsuredCountSpecified(){
                               return localMainInsuredCountTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getMainInsuredCount(){
                               return localMainInsuredCount;
                           }



                            /**
                               * Auto generated setter method
                               * @param param MainInsuredCount
                               */
                               public void setMainInsuredCount(String param){
                            localMainInsuredCountTracker = true;

                                            this.localMainInsuredCount=param;


                               }


                        /**
                        * field for OthSerialNo
                        */


                                    protected String localOthSerialNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthSerialNoTracker = false ;

                           public boolean isOthSerialNoSpecified(){
                               return localOthSerialNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthSerialNo(){
                               return localOthSerialNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthSerialNo
                               */
                               public void setOthSerialNo(String param){
                            localOthSerialNoTracker = true;

                                            this.localOthSerialNo=param;


                               }


                        /**
                        * field for PolicyNo
                        */


                                    protected String localPolicyNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPolicyNoTracker = false ;

                           public boolean isPolicyNoSpecified(){
                               return localPolicyNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPolicyNo(){
                               return localPolicyNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param PolicyNo
                               */
                               public void setPolicyNo(String param){
                            localPolicyNoTracker = true;

                                            this.localPolicyNo=param;


                               }


                        /**
                        * field for PolicyURL
                        */


                                    protected String localPolicyURL ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPolicyURLTracker = false ;

                           public boolean isPolicyURLSpecified(){
                               return localPolicyURLTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPolicyURL(){
                               return localPolicyURL;
                           }



                            /**
                               * Auto generated setter method
                               * @param param PolicyURL
                               */
                               public void setPolicyURL(String param){
                            localPolicyURLTracker = true;

                                            this.localPolicyURL=param;


                               }


                        /**
                        * field for ProposalNo
                        */


                                    protected String localProposalNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProposalNoTracker = false ;

                           public boolean isProposalNoSpecified(){
                               return localProposalNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getProposalNo(){
                               return localProposalNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ProposalNo
                               */
                               public void setProposalNo(String param){
                            localProposalNoTracker = true;

                                            this.localProposalNo=param;


                               }


                        /**
                        * field for RequestType
                        */


                                    protected String localRequestType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRequestTypeTracker = false ;

                           public boolean isRequestTypeSpecified(){
                               return localRequestTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getRequestType(){
                               return localRequestType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param RequestType
                               */
                               public void setRequestType(String param){
                            localRequestTypeTracker = true;

                                            this.localRequestType=param;


                               }


                        /**
                        * field for ResBatchPolicyDetailArray
                        * This was an Array!
                        */


                                    protected ResBatchPolicyDetail[] localResBatchPolicyDetailArray ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResBatchPolicyDetailArrayTracker = false ;

                           public boolean isResBatchPolicyDetailArraySpecified(){
                               return localResBatchPolicyDetailArrayTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return ResBatchPolicyDetail[]
                           */
                           public  ResBatchPolicyDetail[] getResBatchPolicyDetailArray(){
                               return localResBatchPolicyDetailArray;
                           }






                              /**
                               * validate the array for ResBatchPolicyDetailArray
                               */
                              protected void validateResBatchPolicyDetailArray(ResBatchPolicyDetail[] param){

                              }


                             /**
                              * Auto generated setter method
                              * @param param ResBatchPolicyDetailArray
                              */
                              public void setResBatchPolicyDetailArray(ResBatchPolicyDetail[] param){

                                   validateResBatchPolicyDetailArray(param);

                               localResBatchPolicyDetailArrayTracker = true;

                                      this.localResBatchPolicyDetailArray=param;
                              }



                             /**
                             * Auto generated add method for the array for convenience
                             * @param param ResBatchPolicyDetail
                             */
                             public void addResBatchPolicyDetailArray(ResBatchPolicyDetail param){
                                   if (localResBatchPolicyDetailArray == null){
                                   localResBatchPolicyDetailArray = new ResBatchPolicyDetail[]{};
                                   }


                                 //update the setting tracker
                                localResBatchPolicyDetailArrayTracker = true;


                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localResBatchPolicyDetailArray);
                               list.add(param);
                               this.localResBatchPolicyDetailArray =
                             (ResBatchPolicyDetail[])list.toArray(
                            new ResBatchPolicyDetail[list.size()]);

                             }


                        /**
                        * field for ResponseCode
                        */


                                    protected String localResponseCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResponseCodeTracker = false ;

                           public boolean isResponseCodeSpecified(){
                               return localResponseCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getResponseCode(){
                               return localResponseCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param ResponseCode
                               */
                               public void setResponseCode(String param){
                            localResponseCodeTracker = true;

                                            this.localResponseCode=param;


                               }


                        /**
                        * field for SendTime
                        */


                                    protected String localSendTime ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSendTimeTracker = false ;

                           public boolean isSendTimeSpecified(){
                               return localSendTimeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSendTime(){
                               return localSendTime;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SendTime
                               */
                               public void setSendTime(String param){
                            localSendTimeTracker = true;

                                            this.localSendTime=param;


                               }


                        /**
                        * field for SerialNo
                        */


                                    protected String localSerialNo ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSerialNoTracker = false ;

                           public boolean isSerialNoSpecified(){
                               return localSerialNoTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSerialNo(){
                               return localSerialNo;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SerialNo
                               */
                               public void setSerialNo(String param){
                            localSerialNoTracker = true;

                                            this.localSerialNo=param;


                               }


                        /**
                        * field for UploadInsuredCount
                        */


                                    protected String localUploadInsuredCount ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUploadInsuredCountTracker = false ;

                           public boolean isUploadInsuredCountSpecified(){
                               return localUploadInsuredCountTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getUploadInsuredCount(){
                               return localUploadInsuredCount;
                           }



                            /**
                               * Auto generated setter method
                               * @param param UploadInsuredCount
                               */
                               public void setUploadInsuredCount(String param){
                            localUploadInsuredCountTracker = true;

                                            this.localUploadInsuredCount=param;


                               }


                        /**
                        * field for Uuid
                        */


                                    protected String localUuid ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUuidTracker = false ;

                           public boolean isUuidSpecified(){
                               return localUuidTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getUuid(){
                               return localUuid;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Uuid
                               */
                               public void setUuid(String param){
                            localUuidTracker = true;

                                            this.localUuid=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ProposalSaveResponse",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ProposalSaveResponse",
                           xmlWriter);
                   }


                   }
                if (localComIDTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "comID", xmlWriter);


                                          if (localComID==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localComID);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localErrorMessageTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "errorMessage", xmlWriter);


                                          if (localErrorMessage==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localErrorMessage);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localFromIDTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "fromID", xmlWriter);


                                          if (localFromID==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localFromID);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localMainInsuredCountTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "mainInsuredCount", xmlWriter);


                                          if (localMainInsuredCount==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localMainInsuredCount);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthSerialNoTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othSerialNo", xmlWriter);


                                          if (localOthSerialNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthSerialNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPolicyNoTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "policyNo", xmlWriter);


                                          if (localPolicyNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPolicyNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPolicyURLTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "policyURL", xmlWriter);


                                          if (localPolicyURL==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPolicyURL);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localProposalNoTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "proposalNo", xmlWriter);


                                          if (localProposalNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localProposalNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localRequestTypeTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "requestType", xmlWriter);


                                          if (localRequestType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localRequestType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localResBatchPolicyDetailArrayTracker){
                                       if (localResBatchPolicyDetailArray!=null){
                                            for (int i = 0;i < localResBatchPolicyDetailArray.length;i++){
                                                if (localResBatchPolicyDetailArray[i] != null){
                                                 localResBatchPolicyDetailArray[i].serialize(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","resBatchPolicyDetailArray"),
                                                           xmlWriter);
                                                } else {

                                                            writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "resBatchPolicyDetailArray", xmlWriter);

                                                           // write the nil attribute
                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                                           xmlWriter.writeEndElement();

                                                }

                                            }
                                     } else {

                                                writeStartElement(null, "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd", "resBatchPolicyDetailArray", xmlWriter);

                                               // write the nil attribute
                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
                                               xmlWriter.writeEndElement();

                                    }
                                 } if (localResponseCodeTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "responseCode", xmlWriter);


                                          if (localResponseCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localResponseCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSendTimeTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "sendTime", xmlWriter);


                                          if (localSendTime==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSendTime);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSerialNoTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "serialNo", xmlWriter);


                                          if (localSerialNo==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSerialNo);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localUploadInsuredCountTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "uploadInsuredCount", xmlWriter);


                                          if (localUploadInsuredCount==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localUploadInsuredCount);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localUuidTracker){
                                    namespace = "http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "uuid", xmlWriter);


                                          if (localUuid==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localUuid);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localComIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "comID"));

                                         elementList.add(localComID==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComID));
                                    } if (localErrorMessageTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "errorMessage"));

                                         elementList.add(localErrorMessage==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localErrorMessage));
                                    } if (localFromIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "fromID"));

                                         elementList.add(localFromID==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFromID));
                                    } if (localMainInsuredCountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "mainInsuredCount"));

                                         elementList.add(localMainInsuredCount==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMainInsuredCount));
                                    } if (localOthSerialNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othSerialNo"));

                                         elementList.add(localOthSerialNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthSerialNo));
                                    } if (localPolicyNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "policyNo"));

                                         elementList.add(localPolicyNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPolicyNo));
                                    } if (localPolicyURLTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "policyURL"));

                                         elementList.add(localPolicyURL==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPolicyURL));
                                    } if (localProposalNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "proposalNo"));

                                         elementList.add(localProposalNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProposalNo));
                                    } if (localRequestTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "requestType"));

                                         elementList.add(localRequestType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRequestType));
                                    } if (localResBatchPolicyDetailArrayTracker){
                             if (localResBatchPolicyDetailArray!=null) {
                                 for (int i = 0;i < localResBatchPolicyDetailArray.length;i++){

                                    if (localResBatchPolicyDetailArray[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "resBatchPolicyDetailArray"));
                                         elementList.add(localResBatchPolicyDetailArray[i]);
                                    } else {

                                                elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "resBatchPolicyDetailArray"));
                                                elementList.add(null);

                                    }

                                 }
                             } else {

                                        elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                          "resBatchPolicyDetailArray"));
                                        elementList.add(localResBatchPolicyDetailArray);

                             }

                        } if (localResponseCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "responseCode"));

                                         elementList.add(localResponseCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResponseCode));
                                    } if (localSendTimeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "sendTime"));

                                         elementList.add(localSendTime==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSendTime));
                                    } if (localSerialNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "serialNo"));

                                         elementList.add(localSerialNo==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSerialNo));
                                    } if (localUploadInsuredCountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "uploadInsuredCount"));

                                         elementList.add(localUploadInsuredCount==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUploadInsuredCount));
                                    } if (localUuidTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "uuid"));

                                         elementList.add(localUuid==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUuid));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ProposalSaveResponse parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            ProposalSaveResponse object =
                new ProposalSaveResponse();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ProposalSaveResponse".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ProposalSaveResponse) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();

                        java.util.ArrayList list10 = new java.util.ArrayList();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","comID").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setComID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","errorMessage").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setErrorMessage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","fromID").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setFromID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","mainInsuredCount").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setMainInsuredCount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othSerialNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthSerialNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","policyNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPolicyNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","policyURL").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPolicyURL(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","proposalNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setProposalNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","requestType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setRequestType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","resBatchPolicyDetailArray").equals(reader.getName())){



                                    // Process the array and step past its final element's end.

                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                              list10.add(null);
                                                              reader.next();
                                                          } else {
                                                        list10.add(ResBatchPolicyDetail.Factory.parse(reader));
                                                                }
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone10 = false;
                                                        while(!loopDone10){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone10 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","resBatchPolicyDetailArray").equals(reader.getName())){

                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                                                          list10.add(null);
                                                                          reader.next();
                                                                      } else {
                                                                    list10.add(ResBatchPolicyDetail.Factory.parse(reader));
                                                                        }
                                                                }else{
                                                                    loopDone10 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array

                                                        object.setResBatchPolicyDetailArray((ResBatchPolicyDetail[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                ResBatchPolicyDetail.class,
                                                                list10));

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","responseCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setResponseCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","sendTime").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSendTime(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","serialNo").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSerialNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","uploadInsuredCount").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setUploadInsuredCount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","uuid").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setUuid(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class SalerInfoEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = SalerInfoEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for Saler
                        */


                                    protected String localSaler ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSalerTracker = false ;

                           public boolean isSalerSpecified(){
                               return localSalerTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSaler(){
                               return localSaler;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Saler
                               */
                               public void setSaler(String param){
                            localSalerTracker = true;

                                            this.localSaler=param;


                               }


                        /**
                        * field for SalerBranch
                        */


                                    protected String localSalerBranch ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSalerBranchTracker = false ;

                           public boolean isSalerBranchSpecified(){
                               return localSalerBranchTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSalerBranch(){
                               return localSalerBranch;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SalerBranch
                               */
                               public void setSalerBranch(String param){
                            localSalerBranchTracker = true;

                                            this.localSalerBranch=param;


                               }


                        /**
                        * field for SalerBranchName
                        */


                                    protected String localSalerBranchName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSalerBranchNameTracker = false ;

                           public boolean isSalerBranchNameSpecified(){
                               return localSalerBranchNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSalerBranchName(){
                               return localSalerBranchName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SalerBranchName
                               */
                               public void setSalerBranchName(String param){
                            localSalerBranchNameTracker = true;

                                            this.localSalerBranchName=param;


                               }


                        /**
                        * field for SalerName
                        */


                                    protected String localSalerName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSalerNameTracker = false ;

                           public boolean isSalerNameSpecified(){
                               return localSalerNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSalerName(){
                               return localSalerName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param SalerName
                               */
                               public void setSalerName(String param){
                            localSalerNameTracker = true;

                                            this.localSalerName=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":SalerInfoEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "SalerInfoEhm",
                           xmlWriter);
                   }


                   }
                if (localSalerTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "saler", xmlWriter);


                                          if (localSaler==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSaler);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSalerBranchTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "salerBranch", xmlWriter);


                                          if (localSalerBranch==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSalerBranch);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSalerBranchNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "salerBranchName", xmlWriter);


                                          if (localSalerBranchName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSalerBranchName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSalerNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "salerName", xmlWriter);


                                          if (localSalerName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSalerName);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localSalerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "saler"));

                                         elementList.add(localSaler==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSaler));
                                    } if (localSalerBranchTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "salerBranch"));

                                         elementList.add(localSalerBranch==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSalerBranch));
                                    } if (localSalerBranchNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "salerBranchName"));

                                         elementList.add(localSalerBranchName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSalerBranchName));
                                    } if (localSalerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "salerName"));

                                         elementList.add(localSalerName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSalerName));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static SalerInfoEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            SalerInfoEhm object =
                new SalerInfoEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"SalerInfoEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (SalerInfoEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","saler").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSaler(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","salerBranch").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSalerBranch(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","salerBranchName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSalerBranchName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","salerName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSalerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class OperteLogEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = OperteLogEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for Branch
                        */


                                    protected String localBranch ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBranchTracker = false ;

                           public boolean isBranchSpecified(){
                               return localBranchTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBranch(){
                               return localBranch;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Branch
                               */
                               public void setBranch(String param){
                            localBranchTracker = true;

                                            this.localBranch=param;


                               }


                        /**
                        * field for BranchName
                        */


                                    protected String localBranchName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBranchNameTracker = false ;

                           public boolean isBranchNameSpecified(){
                               return localBranchNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBranchName(){
                               return localBranchName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BranchName
                               */
                               public void setBranchName(String param){
                            localBranchNameTracker = true;

                                            this.localBranchName=param;


                               }


                        /**
                        * field for CxSaler
                        */


                                    protected String localCxSaler ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCxSalerTracker = false ;

                           public boolean isCxSalerSpecified(){
                               return localCxSalerTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getCxSaler(){
                               return localCxSaler;
                           }



                            /**
                               * Auto generated setter method
                               * @param param CxSaler
                               */
                               public void setCxSaler(String param){
                            localCxSalerTracker = true;

                                            this.localCxSaler=param;


                               }


                        /**
                        * field for CxSalerBranch
                        */


                                    protected String localCxSalerBranch ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCxSalerBranchTracker = false ;

                           public boolean isCxSalerBranchSpecified(){
                               return localCxSalerBranchTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getCxSalerBranch(){
                               return localCxSalerBranch;
                           }



                            /**
                               * Auto generated setter method
                               * @param param CxSalerBranch
                               */
                               public void setCxSalerBranch(String param){
                            localCxSalerBranchTracker = true;

                                            this.localCxSalerBranch=param;


                               }


                        /**
                        * field for CxSalerBranchName
                        */


                                    protected String localCxSalerBranchName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCxSalerBranchNameTracker = false ;

                           public boolean isCxSalerBranchNameSpecified(){
                               return localCxSalerBranchNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getCxSalerBranchName(){
                               return localCxSalerBranchName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param CxSalerBranchName
                               */
                               public void setCxSalerBranchName(String param){
                            localCxSalerBranchNameTracker = true;

                                            this.localCxSalerBranchName=param;


                               }


                        /**
                        * field for CxSalerName
                        */


                                    protected String localCxSalerName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCxSalerNameTracker = false ;

                           public boolean isCxSalerNameSpecified(){
                               return localCxSalerNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getCxSalerName(){
                               return localCxSalerName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param CxSalerName
                               */
                               public void setCxSalerName(String param){
                            localCxSalerNameTracker = true;

                                            this.localCxSalerName=param;


                               }


                        /**
                        * field for DrawerId
                        */


                                    protected String localDrawerId ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDrawerIdTracker = false ;

                           public boolean isDrawerIdSpecified(){
                               return localDrawerIdTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDrawerId(){
                               return localDrawerId;
                           }



                            /**
                               * Auto generated setter method
                               * @param param DrawerId
                               */
                               public void setDrawerId(String param){
                            localDrawerIdTracker = true;

                                            this.localDrawerId=param;


                               }


                        /**
                        * field for DrawerName
                        */


                                    protected String localDrawerName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDrawerNameTracker = false ;

                           public boolean isDrawerNameSpecified(){
                               return localDrawerNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getDrawerName(){
                               return localDrawerName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param DrawerName
                               */
                               public void setDrawerName(String param){
                            localDrawerNameTracker = true;

                                            this.localDrawerName=param;


                               }


                        /**
                        * field for Operator
                        */


                                    protected String localOperator ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOperatorTracker = false ;

                           public boolean isOperatorSpecified(){
                               return localOperatorTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOperator(){
                               return localOperator;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Operator
                               */
                               public void setOperator(String param){
                            localOperatorTracker = true;

                                            this.localOperator=param;


                               }


                        /**
                        * field for OperatorBranch
                        */


                                    protected String localOperatorBranch ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOperatorBranchTracker = false ;

                           public boolean isOperatorBranchSpecified(){
                               return localOperatorBranchTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOperatorBranch(){
                               return localOperatorBranch;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OperatorBranch
                               */
                               public void setOperatorBranch(String param){
                            localOperatorBranchTracker = true;

                                            this.localOperatorBranch=param;


                               }


                        /**
                        * field for OperatorBranchName
                        */


                                    protected String localOperatorBranchName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOperatorBranchNameTracker = false ;

                           public boolean isOperatorBranchNameSpecified(){
                               return localOperatorBranchNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOperatorBranchName(){
                               return localOperatorBranchName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OperatorBranchName
                               */
                               public void setOperatorBranchName(String param){
                            localOperatorBranchNameTracker = true;

                                            this.localOperatorBranchName=param;


                               }


                        /**
                        * field for OperatorBusinessArea
                        */


                                    protected String localOperatorBusinessArea ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOperatorBusinessAreaTracker = false ;

                           public boolean isOperatorBusinessAreaSpecified(){
                               return localOperatorBusinessAreaTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOperatorBusinessArea(){
                               return localOperatorBusinessArea;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OperatorBusinessArea
                               */
                               public void setOperatorBusinessArea(String param){
                            localOperatorBusinessAreaTracker = true;

                                            this.localOperatorBusinessArea=param;


                               }


                        /**
                        * field for OperatorName
                        */


                                    protected String localOperatorName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOperatorNameTracker = false ;

                           public boolean isOperatorNameSpecified(){
                               return localOperatorNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOperatorName(){
                               return localOperatorName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OperatorName
                               */
                               public void setOperatorName(String param){
                            localOperatorNameTracker = true;

                                            this.localOperatorName=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":OperteLogEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "OperteLogEhm",
                           xmlWriter);
                   }


                   }
                if (localBranchTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "branch", xmlWriter);


                                          if (localBranch==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBranch);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBranchNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "branchName", xmlWriter);


                                          if (localBranchName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBranchName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localCxSalerTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "cxSaler", xmlWriter);


                                          if (localCxSaler==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localCxSaler);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localCxSalerBranchTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "cxSalerBranch", xmlWriter);


                                          if (localCxSalerBranch==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localCxSalerBranch);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localCxSalerBranchNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "cxSalerBranchName", xmlWriter);


                                          if (localCxSalerBranchName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localCxSalerBranchName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localCxSalerNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "cxSalerName", xmlWriter);


                                          if (localCxSalerName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localCxSalerName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDrawerIdTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "drawerId", xmlWriter);


                                          if (localDrawerId==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDrawerId);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localDrawerNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "drawerName", xmlWriter);


                                          if (localDrawerName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localDrawerName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOperatorTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "operator", xmlWriter);


                                          if (localOperator==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOperator);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOperatorBranchTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "operatorBranch", xmlWriter);


                                          if (localOperatorBranch==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOperatorBranch);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOperatorBranchNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "operatorBranchName", xmlWriter);


                                          if (localOperatorBranchName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOperatorBranchName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOperatorBusinessAreaTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "operatorBusinessArea", xmlWriter);


                                          if (localOperatorBusinessArea==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOperatorBusinessArea);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOperatorNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "operatorName", xmlWriter);


                                          if (localOperatorName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOperatorName);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBranchTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "branch"));

                                         elementList.add(localBranch==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBranch));
                                    } if (localBranchNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "branchName"));

                                         elementList.add(localBranchName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBranchName));
                                    } if (localCxSalerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "cxSaler"));

                                         elementList.add(localCxSaler==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCxSaler));
                                    } if (localCxSalerBranchTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "cxSalerBranch"));

                                         elementList.add(localCxSalerBranch==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCxSalerBranch));
                                    } if (localCxSalerBranchNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "cxSalerBranchName"));

                                         elementList.add(localCxSalerBranchName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCxSalerBranchName));
                                    } if (localCxSalerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "cxSalerName"));

                                         elementList.add(localCxSalerName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCxSalerName));
                                    } if (localDrawerIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "drawerId"));

                                         elementList.add(localDrawerId==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDrawerId));
                                    } if (localDrawerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "drawerName"));

                                         elementList.add(localDrawerName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDrawerName));
                                    } if (localOperatorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "operator"));

                                         elementList.add(localOperator==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperator));
                                    } if (localOperatorBranchTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "operatorBranch"));

                                         elementList.add(localOperatorBranch==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperatorBranch));
                                    } if (localOperatorBranchNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "operatorBranchName"));

                                         elementList.add(localOperatorBranchName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperatorBranchName));
                                    } if (localOperatorBusinessAreaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "operatorBusinessArea"));

                                         elementList.add(localOperatorBusinessArea==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperatorBusinessArea));
                                    } if (localOperatorNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "operatorName"));

                                         elementList.add(localOperatorName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperatorName));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static OperteLogEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            OperteLogEhm object =
                new OperteLogEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"OperteLogEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (OperteLogEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","branch").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBranch(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","branchName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBranchName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","cxSaler").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setCxSaler(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","cxSalerBranch").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setCxSalerBranch(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","cxSalerBranchName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setCxSalerBranchName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","cxSalerName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setCxSalerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","drawerId").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDrawerId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","drawerName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setDrawerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","operator").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOperator(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","operatorBranch").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOperatorBranch(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","operatorBranchName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOperatorBranchName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","operatorBusinessArea").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOperatorBusinessArea(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","operatorName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOperatorName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


        public static class ApplicantEhm
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ApplicantEhm
                Namespace URI = http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd
                Namespace Prefix = ns1
                */


                        /**
                        * field for AddressName
                        */


                                    protected String localAddressName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressNameTracker = false ;

                           public boolean isAddressNameSpecified(){
                               return localAddressNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAddressName(){
                               return localAddressName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AddressName
                               */
                               public void setAddressName(String param){
                            localAddressNameTracker = true;

                                            this.localAddressName=param;


                               }


                        /**
                        * field for Age
                        */


                                    protected String localAge ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAgeTracker = false ;

                           public boolean isAgeSpecified(){
                               return localAgeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAge(){
                               return localAge;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Age
                               */
                               public void setAge(String param){
                            localAgeTracker = true;

                                            this.localAge=param;


                               }


                        /**
                        * field for AppliCode
                        */


                                    protected String localAppliCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAppliCodeTracker = false ;

                           public boolean isAppliCodeSpecified(){
                               return localAppliCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAppliCode(){
                               return localAppliCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AppliCode
                               */
                               public void setAppliCode(String param){
                            localAppliCodeTracker = true;

                                            this.localAppliCode=param;


                               }


                        /**
                        * field for AppliName
                        */


                                    protected String localAppliName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAppliNameTracker = false ;

                           public boolean isAppliNameSpecified(){
                               return localAppliNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getAppliName(){
                               return localAppliName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param AppliName
                               */
                               public void setAppliName(String param){
                            localAppliNameTracker = true;

                                            this.localAppliName=param;


                               }


                        /**
                        * field for Birthday
                        */


                                    protected String localBirthday ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBirthdayTracker = false ;

                           public boolean isBirthdaySpecified(){
                               return localBirthdayTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBirthday(){
                               return localBirthday;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Birthday
                               */
                               public void setBirthday(String param){
                            localBirthdayTracker = true;

                                            this.localBirthday=param;


                               }


                        /**
                        * field for BusinessSort
                        */


                                    protected String localBusinessSort ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessSortTracker = false ;

                           public boolean isBusinessSortSpecified(){
                               return localBusinessSortTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBusinessSort(){
                               return localBusinessSort;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BusinessSort
                               */
                               public void setBusinessSort(String param){
                            localBusinessSortTracker = true;

                                            this.localBusinessSort=param;


                               }


                        /**
                        * field for BusinessSource
                        */


                                    protected String localBusinessSource ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessSourceTracker = false ;

                           public boolean isBusinessSourceSpecified(){
                               return localBusinessSourceTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getBusinessSource(){
                               return localBusinessSource;
                           }



                            /**
                               * Auto generated setter method
                               * @param param BusinessSource
                               */
                               public void setBusinessSource(String param){
                            localBusinessSourceTracker = true;

                                            this.localBusinessSource=param;


                               }


                        /**
                        * field for Email
                        */


                                    protected String localEmail ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmailTracker = false ;

                           public boolean isEmailSpecified(){
                               return localEmailTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getEmail(){
                               return localEmail;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Email
                               */
                               public void setEmail(String param){
                            localEmailTracker = true;

                                            this.localEmail=param;


                               }


                        /**
                        * field for IdentifyNumber
                        */


                                    protected String localIdentifyNumber ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyNumberTracker = false ;

                           public boolean isIdentifyNumberSpecified(){
                               return localIdentifyNumberTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyNumber(){
                               return localIdentifyNumber;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyNumber
                               */
                               public void setIdentifyNumber(String param){
                            localIdentifyNumberTracker = true;

                                            this.localIdentifyNumber=param;


                               }


                        /**
                        * field for IdentifyType
                        */


                                    protected String localIdentifyType ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIdentifyTypeTracker = false ;

                           public boolean isIdentifyTypeSpecified(){
                               return localIdentifyTypeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getIdentifyType(){
                               return localIdentifyType;
                           }



                            /**
                               * Auto generated setter method
                               * @param param IdentifyType
                               */
                               public void setIdentifyType(String param){
                            localIdentifyTypeTracker = true;

                                            this.localIdentifyType=param;


                               }


                        /**
                        * field for InduredIdentity
                        */


                                    protected String localInduredIdentity ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInduredIdentityTracker = false ;

                           public boolean isInduredIdentitySpecified(){
                               return localInduredIdentityTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInduredIdentity(){
                               return localInduredIdentity;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InduredIdentity
                               */
                               public void setInduredIdentity(String param){
                            localInduredIdentityTracker = true;

                                            this.localInduredIdentity=param;


                               }


                        /**
                        * field for InsuredNature
                        */


                                    protected String localInsuredNature ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInsuredNatureTracker = false ;

                           public boolean isInsuredNatureSpecified(){
                               return localInsuredNatureTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getInsuredNature(){
                               return localInsuredNature;
                           }



                            /**
                               * Auto generated setter method
                               * @param param InsuredNature
                               */
                               public void setInsuredNature(String param){
                            localInsuredNatureTracker = true;

                                            this.localInsuredNature=param;


                               }


                        /**
                        * field for LinkerName
                        */


                                    protected String localLinkerName ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLinkerNameTracker = false ;

                           public boolean isLinkerNameSpecified(){
                               return localLinkerNameTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getLinkerName(){
                               return localLinkerName;
                           }



                            /**
                               * Auto generated setter method
                               * @param param LinkerName
                               */
                               public void setLinkerName(String param){
                            localLinkerNameTracker = true;

                                            this.localLinkerName=param;


                               }


                        /**
                        * field for Mobile
                        */


                                    protected String localMobile ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMobileTracker = false ;

                           public boolean isMobileSpecified(){
                               return localMobileTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getMobile(){
                               return localMobile;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Mobile
                               */
                               public void setMobile(String param){
                            localMobileTracker = true;

                                            this.localMobile=param;


                               }


                        /**
                        * field for OthField1
                        */


                                    protected String localOthField1 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField1Tracker = false ;

                           public boolean isOthField1Specified(){
                               return localOthField1Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField1(){
                               return localOthField1;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField1
                               */
                               public void setOthField1(String param){
                            localOthField1Tracker = true;

                                            this.localOthField1=param;


                               }


                        /**
                        * field for OthField2
                        */


                                    protected String localOthField2 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField2Tracker = false ;

                           public boolean isOthField2Specified(){
                               return localOthField2Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField2(){
                               return localOthField2;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField2
                               */
                               public void setOthField2(String param){
                            localOthField2Tracker = true;

                                            this.localOthField2=param;


                               }


                        /**
                        * field for OthField3
                        */


                                    protected String localOthField3 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField3Tracker = false ;

                           public boolean isOthField3Specified(){
                               return localOthField3Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField3(){
                               return localOthField3;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField3
                               */
                               public void setOthField3(String param){
                            localOthField3Tracker = true;

                                            this.localOthField3=param;


                               }


                        /**
                        * field for OthField4
                        */


                                    protected String localOthField4 ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthField4Tracker = false ;

                           public boolean isOthField4Specified(){
                               return localOthField4Tracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getOthField4(){
                               return localOthField4;
                           }



                            /**
                               * Auto generated setter method
                               * @param param OthField4
                               */
                               public void setOthField4(String param){
                            localOthField4Tracker = true;

                                            this.localOthField4=param;


                               }


                        /**
                        * field for Phone
                        */


                                    protected String localPhone ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPhoneTracker = false ;

                           public boolean isPhoneSpecified(){
                               return localPhoneTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPhone(){
                               return localPhone;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Phone
                               */
                               public void setPhone(String param){
                            localPhoneTracker = true;

                                            this.localPhone=param;


                               }


                        /**
                        * field for PostAddress
                        */


                                    protected String localPostAddress ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPostAddressTracker = false ;

                           public boolean isPostAddressSpecified(){
                               return localPostAddressTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPostAddress(){
                               return localPostAddress;
                           }



                            /**
                               * Auto generated setter method
                               * @param param PostAddress
                               */
                               public void setPostAddress(String param){
                            localPostAddressTracker = true;

                                            this.localPostAddress=param;


                               }


                        /**
                        * field for PostCode
                        */


                                    protected String localPostCode ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPostCodeTracker = false ;

                           public boolean isPostCodeSpecified(){
                               return localPostCodeTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getPostCode(){
                               return localPostCode;
                           }



                            /**
                               * Auto generated setter method
                               * @param param PostCode
                               */
                               public void setPostCode(String param){
                            localPostCodeTracker = true;

                                            this.localPostCode=param;


                               }


                        /**
                        * field for Sex
                        */


                                    protected String localSex ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSexTracker = false ;

                           public boolean isSexSpecified(){
                               return localSexTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getSex(){
                               return localSex;
                           }



                            /**
                               * Auto generated setter method
                               * @param param Sex
                               */
                               public void setSex(String param){
                            localSexTracker = true;

                                            this.localSex=param;


                               }


                        /**
                        * field for WorkUnit
                        */


                                    protected String localWorkUnit ;

                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWorkUnitTracker = false ;

                           public boolean isWorkUnitSpecified(){
                               return localWorkUnitTracker;
                           }



                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  String getWorkUnit(){
                               return localWorkUnit;
                           }



                            /**
                               * Auto generated setter method
                               * @param param WorkUnit
                               */
                               public void setWorkUnit(String param){
                            localWorkUnitTracker = true;

                                            this.localWorkUnit=param;


                               }




        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{



               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);

        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{




                String prefix = null;
                String namespace = null;


                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);

                  if (serializeType){


                   String namespacePrefix = registerPrefix(xmlWriter,"http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ApplicantEhm",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ApplicantEhm",
                           xmlWriter);
                   }


                   }
                if (localAddressNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "addressName", xmlWriter);


                                          if (localAddressName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAddressName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAgeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "age", xmlWriter);


                                          if (localAge==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAge);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAppliCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "appliCode", xmlWriter);


                                          if (localAppliCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAppliCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localAppliNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "appliName", xmlWriter);


                                          if (localAppliName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localAppliName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBirthdayTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "birthday", xmlWriter);


                                          if (localBirthday==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBirthday);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBusinessSortTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "businessSort", xmlWriter);


                                          if (localBusinessSort==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBusinessSort);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localBusinessSourceTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "businessSource", xmlWriter);


                                          if (localBusinessSource==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localBusinessSource);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localEmailTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "email", xmlWriter);


                                          if (localEmail==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localEmail);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyNumberTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyNumber", xmlWriter);


                                          if (localIdentifyNumber==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyNumber);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localIdentifyTypeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "identifyType", xmlWriter);


                                          if (localIdentifyType==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localIdentifyType);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInduredIdentityTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "induredIdentity", xmlWriter);


                                          if (localInduredIdentity==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInduredIdentity);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localInsuredNatureTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "insuredNature", xmlWriter);


                                          if (localInsuredNature==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localInsuredNature);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localLinkerNameTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "linkerName", xmlWriter);


                                          if (localLinkerName==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localLinkerName);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localMobileTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "mobile", xmlWriter);


                                          if (localMobile==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localMobile);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField1Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField1", xmlWriter);


                                          if (localOthField1==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField1);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField2Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField2", xmlWriter);


                                          if (localOthField2==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField2);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField3Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField3", xmlWriter);


                                          if (localOthField3==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField3);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localOthField4Tracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "othField4", xmlWriter);


                                          if (localOthField4==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localOthField4);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPhoneTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "phone", xmlWriter);


                                          if (localPhone==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPhone);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPostAddressTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "postAddress", xmlWriter);


                                          if (localPostAddress==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPostAddress);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localPostCodeTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "postCode", xmlWriter);


                                          if (localPostCode==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localPostCode);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localSexTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "sex", xmlWriter);


                                          if (localSex==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localSex);

                                          }

                                   xmlWriter.writeEndElement();
                             } if (localWorkUnitTracker){
                                    namespace = "http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd";
                                    writeStartElement(null, namespace, "workUnit", xmlWriter);


                                          if (localWorkUnit==null){
                                              // write the nil attribute

                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);

                                          }else{


                                                   xmlWriter.writeCharacters(localWorkUnit);

                                          }

                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();


        }

        private static String generatePrefix(String namespace) {
            if(namespace.equals("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(String prefix, String namespace, String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }

        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(String prefix,String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(String namespace,String attName,
                                    String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(String namespace, String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                String attributeNamespace = qname.getNamespaceURI();
                String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                StringBuffer stringToWrite = new StringBuffer();
                String namespaceURI = null;
                String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, String namespace) throws javax.xml.stream.XMLStreamException {
            String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }



        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{



                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddressNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "addressName"));

                                         elementList.add(localAddressName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressName));
                                    } if (localAgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "age"));

                                         elementList.add(localAge==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAge));
                                    } if (localAppliCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "appliCode"));

                                         elementList.add(localAppliCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppliCode));
                                    } if (localAppliNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "appliName"));

                                         elementList.add(localAppliName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppliName));
                                    } if (localBirthdayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "birthday"));

                                         elementList.add(localBirthday==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBirthday));
                                    } if (localBusinessSortTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "businessSort"));

                                         elementList.add(localBusinessSort==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessSort));
                                    } if (localBusinessSourceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "businessSource"));

                                         elementList.add(localBusinessSource==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessSource));
                                    } if (localEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "email"));

                                         elementList.add(localEmail==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmail));
                                    } if (localIdentifyNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyNumber"));

                                         elementList.add(localIdentifyNumber==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyNumber));
                                    } if (localIdentifyTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "identifyType"));

                                         elementList.add(localIdentifyType==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdentifyType));
                                    } if (localInduredIdentityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "induredIdentity"));

                                         elementList.add(localInduredIdentity==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInduredIdentity));
                                    } if (localInsuredNatureTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "insuredNature"));

                                         elementList.add(localInsuredNature==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInsuredNature));
                                    } if (localLinkerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "linkerName"));

                                         elementList.add(localLinkerName==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLinkerName));
                                    } if (localMobileTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "mobile"));

                                         elementList.add(localMobile==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMobile));
                                    } if (localOthField1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField1"));

                                         elementList.add(localOthField1==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField1));
                                    } if (localOthField2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField2"));

                                         elementList.add(localOthField2==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField2));
                                    } if (localOthField3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField3"));

                                         elementList.add(localOthField3==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField3));
                                    } if (localOthField4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "othField4"));

                                         elementList.add(localOthField4==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthField4));
                                    } if (localPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "phone"));

                                         elementList.add(localPhone==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPhone));
                                    } if (localPostAddressTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "postAddress"));

                                         elementList.add(localPostAddress==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPostAddress));
                                    } if (localPostCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "postCode"));

                                         elementList.add(localPostCode==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPostCode));
                                    } if (localSexTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "sex"));

                                         elementList.add(localSex==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSex));
                                    } if (localWorkUnitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd",
                                                                      "workUnit"));

                                         elementList.add(localWorkUnit==null?null:
                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWorkUnit));
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());



        }



     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{




        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ApplicantEhm parse(javax.xml.stream.XMLStreamReader reader) throws Exception{
            ApplicantEhm object =
                new ApplicantEhm();

            int event;
            String nillableValue = null;
            String prefix ="";
            String namespaceuri ="";
            try {

                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();


                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);

                            if (!"ApplicantEhm".equals(type)){
                                //find namespace for the prefix
                                String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ApplicantEhm) ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }


                  }


                }




                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();




                    reader.next();


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","addressName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAddressName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","age").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","appliCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAppliCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","appliName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setAppliName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","birthday").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBirthday(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","businessSort").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBusinessSort(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","businessSource").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setBusinessSource(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","email").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyNumber").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","identifyType").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setIdentifyType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","induredIdentity").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInduredIdentity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","insuredNature").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setInsuredNature(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","linkerName").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setLinkerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","mobile").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField1").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField2").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField3").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","othField4").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setOthField4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","phone").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","postAddress").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPostAddress(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","postCode").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setPostCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","sex").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setSex(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }


                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();

                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://common.dto.proposalSave.brokenScreen.webServiceCenter.sinosoft.com/xsd","workUnit").equals(reader.getName())){

                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){

                                    String content = reader.getElementText();

                                              object.setWorkUnit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));

                                       } else {


                                           reader.getElementText(); // throw away text nodes if any.
                                       }

                                        reader.next();

                              }  // End of if for expected property start element

                                    else {

                                    }

                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();

                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());




            } catch (javax.xml.stream.XMLStreamException e) {
                throw new Exception(e);
            }

            return object;
        }

        }//end of factory class



        }


            private  org.apache.axiom.om.OMElement  toOM(client.SPProposalSaveServiceStub.Service param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {


                        try{
                             return param.getOMElement(client.SPProposalSaveServiceStub.Service.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }


            }

            private  org.apache.axiom.om.OMElement  toOM(client.SPProposalSaveServiceStub.ServiceResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {


                        try{
                             return param.getOMElement(client.SPProposalSaveServiceStub.ServiceResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }


            }


                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, client.SPProposalSaveServiceStub.Service param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{


                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(client.SPProposalSaveServiceStub.Service.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }


                                        }


                             /* methods to provide back word compatibility */




        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  Object fromOM(
        org.apache.axiom.om.OMElement param,
        Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {

                if (client.SPProposalSaveServiceStub.Service.class.equals(type)){

                           return client.SPProposalSaveServiceStub.Service.Factory.parse(param.getXMLStreamReaderWithoutCaching());


                }

                if (client.SPProposalSaveServiceStub.ServiceResponse.class.equals(type)){

                           return client.SPProposalSaveServiceStub.ServiceResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());


                }

        } catch (Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   